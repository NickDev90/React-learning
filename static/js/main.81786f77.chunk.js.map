{"version":3,"sources":["HOC/withAuthRedirect.js","redux/dialogs-reducer.js","redux/friends-reducer.js","Components/Friends/Preloader/Preloader.module.css","API/api.js","Components/Navbar/Navbar.module.css","Components/Profile/Profile.module.css","serviceWorker.js","Components/Header/Header.jsx","redux/auth-reducer.js","Components/Header/HeaderContainer.jsx","Components/Navbar/Navbar.jsx","Components/Profile/MyPosts/Posts/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","redux/profile-reducer.js","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/ProfileStatus/ProfileStatusWithHooks.js","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","Components/Feed/Feed.jsx","Components/Music/Music.jsx","Components/Login/Login.jsx","Components/Settings/Settings.jsx","redux/app-reducer.js","App.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","Components/common/FormsControls/FormsControls.module.css","utils/validators.js","Components/common/FormsControls/FormsControls.js","Components/Friends/Preloader/Preloader.jsx","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Header/Header.module.css","Components/Profile/MyPosts/Posts/Post.module.css","Components/Feed/Feed.module.css"],"names":["mapStateToPropsForRedirect","state","isAuthed","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","sendMessageCreator","type","updateNewMessageTextCreator","textChange","newDiagText","initialState","dialogsData","id","name","src","messagesData","message","dialogsReducer","action","newMessage","newMessageText","users","pageSize","totalFriendsCount","currentPage","isFetching","followingInProgress","followSuccess","userID","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","count","setIsFetching","toggleFollowingProgress","getUsersThunkCreator","page","dispatch","a","friendsAPI","getFriends","data","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unfollow","friendsReducer","fake","map","u","followed","filter","module","exports","instance","axios","withCredentials","baseURL","headers","get","then","response","pageChange","pageNumber","getProfile","userId","console","warn","profileAPI","post","delete","getStatus","updateStatus","status","put","authAPI","getMe","logIn","email","password","rememberMe","logOut","Boolean","window","location","hostname","match","Header","className","s","header","alt","loginBlock","login","onClick","logoutThunk","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","Navbar","classes","nav","item","activeClassName","active","Post","like","href","likesCount","maxLength15","maxLengthCreator","NewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","MyPosts","log","postsElements","posts","p","postsBlock","formData","addPost","WriteNewPost","reverse","setUserStatus","profileReducer","newPost","newPostTextForm","profile","MyPostsContainer","profilePage","newPostText","ProfileStatusWithHooks","useState","editMode","setEditMode","locStatus","setLocStatus","useEffect","fullname","fullName","status_content","onDoubleClick","autoFocus","onBlur","onChange","e","currentTarget","value","ProfileInfo","descriptionBlock","photos","large","Preloader","Profile","ProfileContainer","params","authorizedUserId","history","push","getUserProfile","compose","withRouter","someText","Feed","time","Date","toLocaleTimeString","testVar","setInterval","setState","clearInterval","timeBlock","clock","Music","maxLength20","LoginReduxForm","error","style","Input","placeholder","htmlFor","formSummaryError","loginThunk","errorMessage","messages","stopSubmit","_error","Settings","initialized","appReducer","FriendsContainer","lazy","DialogsContainer","App","initializeApp","fallback","path","render","app","promise","Promise","all","sidebar","sidebarReducer","reducers","combineReducers","dialogsPage","friendsPage","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","reRenderEntireTree","ReactDOM","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","maxLength","length","input","meta","hasError","touched","styles","formControl","lds_dual_ring"],"mappings":"gNAKIA,EAA6B,SAACC,GAAD,MAAY,CAC5CC,SAAUD,EAAME,KAAKD,WAGTE,EAAmB,SAACC,GAAe,IAEzCC,EAFwC,uKAI5C,OAAKC,KAAKC,MAAMN,SAET,kBAACG,EAAcE,KAAKC,OAFM,kBAAC,IAAD,CAAUC,GAAI,eAJH,GAEdC,IAAML,WAYtC,OAJiCM,YAAQX,EAARW,CAAoCL,K,wHChBzDM,EAAqB,iBAAQ,CAACC,KAFtB,iBAIRC,EAA8B,SAACC,GAAD,MACxC,CAAEF,KAN2B,0BAO3BG,YAAaD,IAEdE,EAAe,CACjBC,YAAc,CACX,CAACC,GAAG,EAAGC,KAAK,SAAUC,IAAI,mDAC1B,CAACF,GAAG,UAAWC,KAAK,UAAWC,IAAK,qFACpC,CAACF,GAAG,EAAGC,KAAK,QAASC,IAAK,8FAC1B,CAACF,GAAI,EAAGC,KAAK,SAAUC,IAAK,oFAC5B,CAACF,GAAG,EAAGC,KAAK,QAASC,IAAK,mHAC1B,CAACF,GAAG,OAAQC,KAAK,SAAUC,IAAK,2EAEnCC,aAAe,CACZ,CAACH,GAAI,EAAGI,QAAS,UACjB,CAACJ,GAAI,EAAGI,QAAS,gBACjB,CAACJ,GAAI,EAAGI,QAAS,sBACjB,CAACJ,GAAI,EAAGI,QAAS,4BACjB,CAACJ,GAAI,EAAGI,QAAS,6BACjB,CAACJ,GAAI,EAAGI,QAAS,+BA+BPC,IA1BQ,WAAmC,IAAlCvB,EAAiC,uDAAzBgB,EAAcQ,EAAW,uCAExD,OAAQA,EAAOZ,MACd,IA/BmB,eAgClB,IAAIa,EAAa,CAChBP,GAAK,EACLI,QAAUE,EAAOE,gBAGlB,OAAO,2BACH1B,GADJ,IAECqB,aAAa,GAAD,mBAAMrB,EAAMqB,cAAZ,CAA0BI,MAIxC,IA5C8B,0BA6C7B,OAAO,2BACHzB,GADJ,IAEC0B,eAAgBF,EAAOT,cAGzB,QACC,OAAOf,K,waCzCNgB,EAAe,CAClBW,MAAO,GACPC,SAAU,GACVC,kBAAmB,EACnBC,YAAa,EACbC,YAAY,EACZC,oBAAqB,IAGTC,EAAgB,SAACC,GAAD,MAAa,CAACtB,KAjB5B,SAiB0CsB,WAE5CC,EAAkB,SAACD,GAAD,MAAa,CAACtB,KAlB5B,WAkB4CsB,WAEhDE,EAAW,SAACT,GAAD,MAAY,CAACf,KAnBnB,YAmBoCe,UAEzCU,EAAiB,SAACP,GAAD,MAAkB,CAAClB,KApBxB,mBAoBgDkB,gBAE5DQ,EAAqB,SAACT,GAAD,MAAwB,CAACjB,KArB7B,wBAqB0D2B,MAAOV,IAElFW,EAAgB,SAACT,GAAD,MAAiB,CAACnB,KAtBpB,qBAsB8CmB,eAE5DU,EAA0B,SAACV,EAAYG,GAAb,MAAyB,CAACtB,KAvB5B,+BAuBgEmB,aAAYG,WAGpGQ,EAAuB,SAACC,EAAMf,GAAP,8CAAoB,WAAOgB,GAAP,eAAAC,EAAA,6DACtDD,EAASJ,GAAc,IACvBI,EAASP,EAAeM,IAF8B,SAIrCG,IAAWC,WAAWJ,EAAMf,GAJS,OAIlDoB,EAJkD,OAKtDJ,EAASJ,GAAc,IACvBI,EAASR,EAASY,EAAKC,QACvBL,EAASN,EAAmBU,EAAKE,aAPqB,2CAApB,uDAU9BC,EAAkB,uCAAG,WAAOP,EAAUV,EAAQkB,EAAWC,GAApC,SAAAR,EAAA,6DAC1BD,EAASH,GAAwB,EAAMP,IADb,SAGFkB,EAAUlB,GAHR,OAKU,IALV,OAKVc,KAAKM,YACjBV,EAASS,EAAcnB,IAExBU,EAASH,GAAwB,EAAOP,IARjB,2CAAH,4DAYXqB,EAAS,SAACrB,GAAD,8CAAY,WAAOU,GAAP,SAAAC,EAAA,sDACjCD,EAASH,GAAwB,EAAMP,IAEpCiB,EAAmBP,EAAUV,EAAQY,IAAWS,OAAOC,KAAKtB,GAASD,GAHvC,2CAAZ,uDAOTwB,EAAW,SAACvB,GAAD,8CAAY,WAAOU,GAAP,SAAAC,EAAA,sDACnCD,EAASH,GAAwB,EAAMP,IAEpCiB,EAAmBP,EAAUV,EAAQY,IAAWW,SAASD,KAAKtB,GAASC,GAHvC,2CAAZ,uDA2ETuB,IAnEQ,WAAmC,IAAlC1D,EAAiC,uDAAzBgB,EAAcQ,EAAW,uCAExD,OAAQA,EAAOZ,MACd,IAAK,OAEL,OAAO,2BAAIZ,GAAX,IAAkB2D,KAAM3D,EAAM2D,KAAO,IAErC,IA5Ea,SA6EZ,OAAO,2BACH3D,GADJ,IAEC2B,MAAO3B,EAAM2B,MAAMiC,KAAK,SAACC,GACxB,OAAIA,EAAE3C,KAAOM,EAAOU,OACZ,2BAAI2B,GAAX,IAAcC,UAAU,IAEbD,OAGf,IArFe,WAsFd,OAAO,2BACH7D,GADJ,IAEC2B,MAAO3B,EAAM2B,MAAMiC,KAAK,SAACC,GACxB,OAAIA,EAAE3C,KAAOM,EAAOU,OACZ,2BAAI2B,GAAX,IAAcC,UAAU,IAEbD,OAIf,IA/FgB,YAgGf,OAAO,2BACH7D,GADJ,IAEC2B,MAAOH,EAAOG,QAGhB,IApGuB,mBAqGtB,OAAO,2BACH3B,GADJ,IAEC8B,YAAaN,EAAOM,cAGtB,IAzG4B,wBA0G3B,OAAO,2BACH9B,GADJ,IAEC6B,kBAAmBL,EAAOe,QAG5B,IA9GyB,qBA+GxB,OAAO,2BACHvC,GADJ,IAEC+B,WAAYP,EAAOO,aAGrB,IAnHmC,+BAoHlC,OAAO,2BACH/B,GADJ,IAECgC,oBAAqBR,EAAOO,WAAP,sBACf/B,EAAMgC,qBADS,CACYR,EAAOU,SADnB,YAEflC,EAAMgC,oBAAoB+B,QAAO,SAAA7C,GAAE,OAAIA,GAAMM,EAAOU,aAG5D,QACC,OAAOlC,K,oBCnIVgE,EAAOC,QAAU,CAAC,UAAY,6BAA6B,aAAe,gCAAgC,cAAgB,iCAAiC,gBAAgB,mC,gCCD3K,uHAMMC,EAAWC,SAAa,CAC7BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CAAC,UAAW,0CAGTxB,EAAa,CACzBC,WADyB,SACbjB,EAAaF,GACxB,OAAOsC,EAASK,IAAT,qBAA2BzC,EAA3B,kBAAgDF,IACtD4C,MAAK,SAAAC,GAAQ,OAAIA,EAASzB,SAG5B0B,WANyB,SAMbC,EAAY/C,GACvB,OAAOsC,EAASK,IAAT,qBAA2BI,EAA3B,kBAA+C/C,IACrD4C,MAAK,SAAAC,GAAQ,OAAIA,EAASzB,SAE5B4B,WAVyB,SAUdC,GAEV,OADAC,QAAQC,KAAK,6aACNC,EAAWJ,WAAWC,IAE9BtB,OAdyB,SAclBsB,GACN,OAAOX,EAASe,KAAT,iBAAwBJ,KAEhCpB,SAjByB,SAiBhBoB,GACR,OAAOX,EAASgB,OAAT,iBAA0BL,MAItBG,EAAa,CACzBJ,WADyB,SACdC,GACV,OAAOX,EAASK,IAAT,kBAAwBM,KAEhCM,UAJyB,SAIfN,GACT,OAAOX,EAASK,IAAT,yBAA+BM,KAEvCO,aAPyB,SAOZC,GACZ,OAAOnB,EAASoB,IAAT,iBAA+B,CAACD,OAAQA,MAIpCE,EAAU,CACtBC,MADsB,WAErB,OAAOtB,EAASK,IAAT,YAERkB,MAJsB,SAIfC,EAAOC,GAA+B,IAArBC,EAAoB,wDAC3C,OAAO1B,EAASe,KAAT,aAA4B,CAACS,QAAOC,WAAUC,gBAEtDC,OAPsB,WAQrB,OAAO3B,EAASgB,OAAT,iB,mBCrDTlB,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,yB,sGCAjFD,EAAOC,QAAU,CAAC,QAAU,2B,iICWR6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6ECKSC,EAlBA,SAAC5F,GACf,OAAO,4BAAQ6F,UAAWC,IAAEC,QACrB,yBAAKlF,IAAI,sEAAsEmF,IAAI,KACrF,yBAAKH,UAAWC,IAAEG,YAChBjG,EAAMN,SACI,iCAAOM,EAAMkG,MACP,4BAAQC,QAASnG,EAAMoG,aAAvB,YAEN,kBAAC,IAAD,CAASnG,GAAI,UAAb,Y,+DCLdQ,EAAe,CACjB6D,OAAQ,KACHa,MAAO,KACPe,MAAO,KACPxG,UAAU,GAkBJ2G,EAAkB,SAAC/B,EAAQa,EAAOe,EAAOxG,GAAvB,MAAsC,CAACW,KAzBhD,oBAyBqEiG,QAAS,CAAChC,SAAQa,QAAOe,QAAOxG,cAE9G6G,EAAkB,yDAAM,WAAOlE,GAAP,uBAAAC,EAAA,sEACf0C,IAAQC,QADO,OAGH,KAF7Bf,EADgC,QAGvBzB,KAAKM,aAAmB,EACXmB,EAASzB,KAAKA,KAAlC9B,EAD8B,EAC9BA,GAAIuF,EAD0B,EAC1BA,MAAOf,EADmB,EACnBA,MACf9C,EAASgE,EAAgB1F,EAAIwE,EAAOe,GAAO,KALT,2CAAN,uDAoChBM,EArDK,WAAmC,IAAlC/G,EAAiC,uDAAzBgB,EAAcQ,EAAW,uCAErD,OAAQA,EAAOZ,MACd,IAboB,oBAcnB,OAAO,2BACHZ,GACAwB,EAAOqF,SAIZ,QACC,OAAO7G,ICfJgH,E,uKAIJ,OAAO,kBAAC,EAAW1G,KAAKC,W,GAJIE,IAAML,WAcrBM,eALO,SAACV,GAAD,MAAY,CACjCC,SAAUD,EAAME,KAAKD,SACrBwG,MAAOzG,EAAME,KAAKuG,SAGqB,CAACE,YDgCd,yDAAM,WAAO/D,GAAP,SAAAC,EAAA,sEACX0C,IAAQM,SADG,OAGC,IAHD,OAGnB7C,KAAKM,YACjBV,EAASgE,EAAgB,KAAM,KAAM,MAAM,IAJZ,2CAAN,wDChCZlG,CAAyCsG,G,iBCIzCC,EAxBA,WACd,OAAO,yBAAKb,UAAWc,IAAQC,KAC1B,6BACE,kBAAC,IAAD,CAAS3G,GAAG,WAAW4F,UAAWc,IAAQE,KAAMC,gBAAiBH,IAAQI,QAAzE,YAEF,6BACE,kBAAC,IAAD,CAAS9G,GAAG,WAAW4F,UAAWc,IAAQE,KAAMC,gBAAiBH,IAAQI,QAAzE,aAEF,6BACE,kBAAC,IAAD,CAAS9G,GAAG,QAAQ4F,UAAWc,IAAQE,KAAMC,gBAAiBH,IAAQI,QAAtE,SAEF,6BACE,kBAAC,IAAD,CAAS9G,GAAG,SAAS4F,UAAWc,IAAQE,KAAMC,gBAAiBH,IAAQI,QAAvE,UAEF,6BACE,kBAAC,IAAD,CAAS9G,GAAG,YAAY4F,UAAWc,IAAQE,KAAMC,gBAAiBH,IAAQI,QAA1E,aAEF,6BACE,kBAAC,IAAD,CAAS9G,GAAG,WAAW4F,UAAWc,IAAQE,KAAMC,gBAAiBH,IAAQI,QAAzE,c,2CCHOC,EAhBF,SAAChH,GACb,OACG,yBAAK6F,UAAWC,IAAEe,MAChB,yBAAKhG,IAAI,6EAA6EmF,IAAI,KAC1F,6BACGhG,EAAMe,SAGT,yBAAK8E,UAAWC,IAAEmB,MAChB,uBAAGC,KAAK,KAAR,IAAa,sCAAYlH,EAAMmH,WAAlB,KAAb,Q,kCCLFC,EAAcC,YAAiB,IAgB/BC,EAAmBC,YAAU,CACjCC,KAAM,WADiBD,EAdP,SAACvH,GACjB,OACI,0BAAMyH,SAAUzH,EAAM0H,aAAc7B,UAAWC,IAAE0B,MAC/C,6BACE,kBAACG,EAAA,EAAD,CAAOC,UAAWC,IAAUjH,KAAK,eAC/BkH,SAAU,CAACC,IAAUX,MAEzB,6BACE,iDA2DKY,EA/CC,SAAChI,GACfuE,QAAQ0D,IAAI,4BACZ1D,QAAQ0D,IAAIjI,GAEZ,IAAIkI,EAAgBlI,EAAMmI,MAAM9E,KAAI,SAAS+E,GAC3C,OAAO,kBAAC,EAAD,CAAMrH,QAASqH,EAAErH,QAASoG,WAAYiB,EAAEjB,gBAsBlD,OAAO,yBAAKtB,UAAWC,IAAEuC,YAClB,wCASA,kBAACf,EAAD,CAAkBG,SAlBL,SAACa,GAClBtI,EAAMuI,QAAQD,EAASE,cAEvBF,EAASE,aAAe,MAiBpB,yBAAK3C,UAAWC,IAAEqC,OAEfD,EAAcO,a,QC9DrBhI,EAAe,CAChB0H,MAAQ,CACN,CAACxH,GAAI,EAAGI,QAAS,sBAAuBoG,WAAY,IACpD,CAACxG,GAAI,EAAGI,QAAS,qBAAsBoG,WAAY,GACnD,CAACxG,GAAI,EAAGI,QAAS,mBAAoBoG,WAAY,IACjD,CAACxG,GAAI,EAAGI,QAAS,mBAAoBoG,WAAY,IACjD,CAACxG,GAAI,EAAGI,QAAS,2BAA4BoG,WAAY,MAyDjDuB,EAAgB,SAAC5D,GAAD,MAAc,CAACzE,KAlEpB,kBAkE2CyE,WAcpD6D,EAjEQ,WAAmC,IAAlClJ,EAAiC,uDAAzBgB,EAAcQ,EAAW,uCAExD,OAAQA,EAAOZ,MACd,IArBe,WAsBd,IAAIuI,EAAU,CACbjI,GAAK,EACLI,QAAUE,EAAO4H,gBACjB1B,WAAa,GAEd,OAAO,2BACH1H,GADJ,IAEC0I,MAAM,GAAD,mBAAM1I,EAAM0I,OAAZ,CAAmBS,MAU1B,IArCuB,mBAsCtB,OAAO,2BACHnJ,GADJ,IAECqJ,QAAS7H,EAAO6H,UAGlB,IA1CsB,kBA2CrB,OAAO,2BACHrJ,GADJ,IAECqF,OAAQ7D,EAAO6D,SAGjB,QACC,OAAOrF,ICRV,IAEesJ,EAFU5I,aAnBzB,SAA0BV,GAEzB,MAAO,CACN0I,MAAO1I,EAAMuJ,YAAYb,UAI3B,SAA6B9F,GAE5B,MAAO,CACNkG,QAAS,SAACU,GACT5G,EDoBwD,CAAChC,KAxD3C,WAwD2DwI,gBCpB3CI,QAQR9I,CAA6C6H,G,iCCEvDkB,EA7CgB,SAAClJ,GAAW,IAAD,EAERmJ,oBAAS,GAFD,mBAEjCC,EAFiC,KAEvBC,EAFuB,OAGNF,mBAASnJ,EAAM8E,QAHT,mBAGjCwE,EAHiC,KAGtBC,EAHsB,KAKtCC,qBAAY,WACRD,EAAavJ,EAAM8E,UACpB,CAAC9E,EAAM8E,SAcV,OACA,6BAEW,6BACE,0BAAMe,UAAWC,IAAE2D,UAAWzJ,EAAM8I,QAAQY,YAG5CN,GACD,6BACE,0BAAMvD,UAAWC,IAAE6D,eAAgBC,cArBxB,WACrBP,GAAY,KAqBGrJ,EAAM8E,SAIhBsE,GACC,6BACE,2BAAOS,WAAW,EAAMC,OAzBT,WACvBT,GAAY,GACZrJ,EAAM6E,aAAayE,IAuByCS,SArBzC,SAACC,GACpBT,EAAaS,EAAEC,cAAcC,QAqBrBA,MAAOZ,OCtBRa,GAfK,SAAC,GAAqC,IAApCrB,EAAmC,EAAnCA,QAAShE,EAA0B,EAA1BA,OAAQD,EAAkB,EAAlBA,aAEtC,OAAKiE,EAGE,6BACE,yBAAKjD,UAAWC,IAAEsE,kBAChB,yBAAKvJ,IAAKiI,EAAQuB,OAAOC,MAAOtE,IAAI,MAEtC,kBAAC,EAAD,CAAwB8C,QAASA,EAAShE,OAAQA,EAC1CD,aAAcA,KAPvB,kBAAC0F,EAAA,EAAD,OCgBMC,GAdC,SAACxK,GAKhB,OAAO,6BACL,kBAAC,GAAD,CAAa8I,QAAS9I,EAAM8I,QAAShE,OAAQ9E,EAAM8E,OAAQD,aAAc7E,EAAM6E,eAE5E,kBAAC,EAAD,Q,2BCJA4F,G,kLAIJ,IAAInG,EAASvE,KAAKC,MAAM2F,MAAM+E,OAAOpG,OAChCA,IACJA,EAASvE,KAAKC,MAAM2K,mBAEnB5K,KAAKC,MAAM4K,QAAQC,KAAK,SAM1B9K,KAAKC,MAAM8K,eAAexG,GAC1BvE,KAAKC,MAAM4E,UAAUN,K,+BAIrB,OAAO,kBAAC,GAAD,iBAAavE,KAAKC,MAAlB,CAAyB8I,QAAS/I,KAAKC,MAAM8I,QAClDhE,OAAQ/E,KAAKC,MAAM8E,OAAQD,aAAc9E,KAAKC,MAAM6E,oB,GApBzB3E,IAAML,WAyCtBkL,gBACd5K,aAVqB,SAACV,GAAD,MAAY,CACjCqJ,QAASrJ,EAAMuJ,YAAYF,QAC3BhE,OAAQrF,EAAMuJ,YAAYlE,OAC1B6F,iBAAkBlL,EAAME,KAAK2E,OAC7B5E,SAAUD,EAAME,KAAKD,YAMI,CAACoL,eLWG,SAACxG,GAAD,8CAAY,WAAOjC,GAAP,eAAAC,EAAA,sEACpBC,IAAW8B,WAAWC,GADF,OACrCJ,EADqC,OAEzC7B,EAJ4C,CAAChC,KA5DrB,mBA4D6CyI,QAI7C5E,EAASzB,OAFQ,2CAAZ,uDKXamC,ULkBlB,SAACN,GAAD,8CAAY,WAAOjC,GAAP,eAAAC,EAAA,sEACfmC,IAAWG,UAAUN,GADN,OAChCJ,EADgC,OAEpC7B,EAASqG,EAAcxE,EAASzB,OAFI,2CAAZ,uDKlB6BoC,aLuB1B,SAACC,GAAD,8CAAY,WAAOzC,GAAP,SAAAC,EAAA,sEAClBmC,IAAWI,aAAaC,GADN,OAEN,IAFM,OAE1BrC,KAAKM,YACjBV,EAASqG,EAAc5D,IAHe,2CAAZ,yDKtB3BkG,IACApL,KAHcmL,CAIbN,I,oBCvDEQ,GAAW,CAAC,6BACd,mDAAwB,0CAAxB,IAAgD,wCACjD,gCAAQ,wCAAR,UACC,wCACC,oCACA,mCACA,kCACA,uCAEM,4CAgDMC,G,4MA3CdzL,MAAQ,CACJ0L,MAAM,IAAIC,MAAOC,sB,kEAGA,IAAD,OACnB9G,QAAQ0D,IAAI,2BAGZlI,KAAKuL,QAAUC,aACf,kBAAK,EAAKC,SACT,CAACL,MAAM,IAAIC,MAAOC,yBAChB,O,2CAIH9G,QAAQ0D,IAAI,cACZ1D,QAAQ0D,IAAIlI,KAAKN,S,6CAIjB8E,QAAQ0D,IAAI,gBACZwD,cAAc1L,KAAKuL,W,+BAInB,OACA,6BACC,oCAEI,yFACA,yBAAKzF,UAAWC,KAAE4F,WACjB,8DAAU,0BAAM7F,UAAWC,KAAE6F,OAAS5L,KAAKN,MAAM0L,KAAvC,OAEVF,Q,GAnCW/K,IAAML,WCLV+L,I,OARD,SAAC5L,GACd,OACC,wC,oBCMI6L,GAAcxE,YAAiB,IAiC/ByE,GAAiBvE,YAAU,CAChCC,KAAM,SADgBD,EA9BL,SAAC,GAA2B,IAA1BG,EAAyB,EAAzBA,aAAcqE,EAAW,EAAXA,MAEjC,OACE,0BAAMtE,SAAUC,EAAc7B,UAAWmG,KAAMxE,MAC9C,6BACC,kBAACG,EAAA,EAAD,CAAOC,UAAWqE,IAAO5L,KAAK,OAAOO,KAAK,QAC1CsL,YAAY,QAAQpE,SAAU,CAACC,QAEhC,6BACC,kBAACJ,EAAA,EAAD,CAAOC,UAAWqE,IAAOrL,KAAK,WAAWP,KAAK,WAC9C6L,YAAY,WAAWpE,SAAU,CAACC,IAAU8D,MAF7C,QAGA,6BACA,6BACC,kBAAClE,EAAA,EAAD,CAAOC,UAAW,QAASjH,GAAG,aAAaC,KAAK,aAAaP,KAAK,aAClE,2BAAO8L,QAAQ,cAAf,mBAID,6BACC,4BAAQ9L,KAAK,UAAb,UAGA0L,GAAS,yBAAKlG,UAAWmG,KAAMI,kBAC5BL,OAmCO5L,gBAJS,SAACV,GAAD,MAAY,CACnCC,SAAWD,EAAME,KAAKD,YAGiB,CAAC2M,Wb9Bf,SAAClH,EAAOC,EAAUC,GAAlB,8CAAiC,WAAOhD,GAAP,iBAAAC,EAAA,sEAGrC0C,IAAQE,MAAMC,EAAOC,EAAUC,GAAY,GAHN,OAGtDnB,EAHsD,OAK1DK,QAAQ0D,IAAI/D,EAASzB,MACY,IAA7ByB,EAASzB,KAAKM,WACjBV,EAASkE,MAEL+F,EAAepI,EAASzB,KAAK8J,SACjClK,EAASmK,YAAW,QAAS,CAACC,OAASH,MAVkB,2CAAjC,wDa8BXnM,EAtBD,SAACH,GAOd,OAAIA,EAAMN,SACF,kBAAC,IAAD,CAAUO,GAAE,aAEZ,6BACN,qCACA,kBAAC6L,GAAD,CAAgBrE,SAXD,SAACa,GACjBtI,EAAMqM,WAAW/D,EAASnD,MAAOmD,EAASlD,SAAUkD,EAASjD,mBCzChDqH,I,OARE,SAAC1M,GACjB,OACC,2CCIES,GAAe,CACjBkM,aAAa,GAgCAC,GA7BI,WAAmC,IAAlCnN,EAAiC,uDAAzBgB,GAAcQ,EAAW,uCAEpD,OAAQA,EAAOZ,MACd,IAV0B,sBAWzB,OAAO,2BACHZ,GADJ,IAECkN,aAAa,IAGf,QACC,OAAOlN,ICLJoN,GAAmB3M,IAAM4M,MAAK,kBAAK,iCACnCC,GAAmB7M,IAAM4M,MAAK,kBAAK,uDAInCE,G,kLAGFjN,KAAKC,MAAMiN,kB,2CAIX1I,QAAQ0D,IAAI,oB,+BAIZ,OAAKlI,KAAKC,MAAM2M,YAMd,yBAAK9G,UAAU,eACf,kBAAC,WAAD,CAAUqH,SAAU3C,KAClB,kBAAC,EAAD,MAEA,kBAAC,EAAD,MAEA,yBAAK1E,UAAU,uBACb,kBAAC,IAAD,CAAOsH,KAAK,oBAAoBC,OAAS,kBACrC,kBAAC,GAAD,SAGJ,kBAAC,IAAD,CAAOD,KAAK,WAAWC,OAAS,kBAC5B,kBAACL,GAAD,SAEJ,kBAAC,IAAD,CAAOI,KAAK,WAAWC,OAAS,kBAC5B,kBAACP,GAAD,SAEJ,kBAAC,IAAD,CAAOM,KAAK,QAAQvF,UAAWsD,KAC/B,kBAAC,IAAD,CAAOiC,KAAK,SAASvF,UAAWgE,KAChC,kBAAC,IAAD,CAAOuB,KAAK,YAAYvF,UAAW8E,KACnC,kBAAC,IAAD,CAAOS,KAAK,SAASC,OAAS,kBAC1B,kBAAC,GAAD,YA1BD,kBAAC7C,EAAA,EAAD,U,GAZKrK,IAAML,WAoDTkL,gBACbC,IACA7K,aAPsB,SAACV,GAAD,MAAY,CAClCkN,YAAalN,EAAM4N,IAAIV,eAME,CAACM,cDhDC,kBAAM,SAAC5K,GACnC,IAAIiL,EAAUjL,EAASkE,KACvBgH,QAAQC,IAAI,CAACF,IACXrJ,MAAK,WACL5B,EANuC,CAAChC,KArBf,+BCqEb0K,CAE+BiC,I,UC7E1CvM,GAAe,CAClBgN,QAAU,IASIC,GANQ,WAAmC,IAAlCjO,EAAiC,uDAAzBgB,GAG/B,OAAOhB,G,oBCIJkO,GAAWC,aAAgB,CAC9B5E,YAAaL,EACbkF,YAAa7M,KACbyM,QAASC,GACTI,YAAa3K,KACbxD,KAAM6G,EACNgB,KAAMuG,KACNV,IAAKT,KAKAoB,GAAmBxI,OAAOyI,sCAAwClD,KAElEmD,GAAQC,aAAYR,GAAUK,GAChCI,aAAgBC,QAGpB7I,OAAO0I,MAAQA,GAGAA,UCtBXI,GAAqB,SAAC7O,GACzB8O,IAASnB,OACP,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAUc,MAAOA,IACf,kBAAC,GAAD,QAGHM,SAASC,eAAe,UAI3BH,GAAoBJ,GAAMQ,YAE1BR,GAAMS,WAAW,WACJT,GAAMQ,WAClBJ,QrB0GK,kBAAmBM,WACrBA,UAAUC,cAAcC,MACrB7K,MAAK,SAAA8K,GACJA,EAAaC,gBAEdC,OAAM,SAAAlD,GACLxH,QAAQwH,MAAMA,EAAMhL,a,mBsBxI5B0C,EAAOC,QAAU,CAAC,KAAO,4BAA4B,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,gCCD9J,6EAGaqE,EAAW,SAACmC,GACxB,IAAIA,EACJ,MAAO,yBAGK7C,EAAmB,SAAC6H,GAAD,OAAe,SAAChF,GAC/C,GAAIA,GAASA,EAAMiF,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,iJCL3BrH,EAAW,SAAC,GAA6B,IAA5BuH,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASrP,EAAW,gCAEhDsP,EAAWD,EAAKE,SAAWF,EAAKtD,MACpC,OACC,yBAAKlG,UAAY2J,IAAOC,YAAc,KAAOH,EAAWE,IAAOzD,MAAQ,KACtE,6BACC,8CAAcqD,EAAWpP,KAEzBsP,GAAY,8BAAOD,EAAKtD,SAKfE,EAAQ,SAAC,GAA6B,IAA5BmD,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASrP,EAAW,gCAE7CsP,EAAWD,EAAKE,SAAWF,EAAKtD,MACpC,OACC,yBAAKlG,UAAY2J,IAAOC,YAAc,KAAOH,EAAWE,IAAOzD,MAAQ,KACtE,6BACC,2CAAWqD,EAAWpP,KAEtBsP,GAAY,8BAAOD,EAAKtD,U,gCCzB5B,sCAaexB,IARG,SAACvK,GAIlB,OAAQ,yBAAK6F,UAAW2J,IAAOE,kB,mBCRhCjM,EAAOC,QAAU,CAAC,QAAU,6BAA6B,iBAAmB,sCAAsC,SAAW,8BAA8B,eAAiB,sC,mBCA5KD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,uBAAuB,KAAO,wB,mBCAjGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,mBCA/DD,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,MAAQ,uB","file":"static/js/main.81786f77.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\tisAuthed: state.auth.isAuthed\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuthed) return <Redirect to={\"/login\"} />\r\n\r\n\t\t\treturn <Component {...this.props} />\r\n\t\t}\r\n\t}\r\n\r\n\tlet ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n\r\n\treturn ConnectedRedirectComponent;\r\n}","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nexport const sendMessageCreator = () => ( {type: SEND_MESSAGE} );\r\n\r\nexport const updateNewMessageTextCreator = (textChange) => \r\n\t( { type: UPDATE_NEW_MESSAGE_TEXT,\r\n    \tnewDiagText: textChange } );\r\n\r\nlet initialState = {\r\n\t\tdialogsData : [\r\n\t\t\t  {id:1, name:'Kolyan', src:'https://img.icons8.com/bubbles/2x/user-male.png'}, \r\n\t\t\t  {id:'Mariana', name:'Mariana', src: 'https://www.pngkey.com/png/full/781-7813239_brown-pigtail-hair-lady-icon-icon.png'}, \r\n\t\t\t  {id:3, name:'Lesia', src: 'https://cdn2.iconfinder.com/data/icons/school-flat-circle/512/Girl_lady_user_woman-512.png'}, \r\n\t\t\t  {id: 4, name:'Andrew', src: 'https://cdn.dribbble.com/users/79571/screenshots/2562782/user_-_illustration.png'}, \r\n\t\t\t  {id:6, name:'Iryna', src: 'https://cdn2.iconfinder.com/data/icons/people-flat-design/64/Woman-Lady-Girl-Female-Avatar-People-Happy-512.png'},\r\n\t\t\t  {id:'Oksi', name:'Oksana', src: 'https://cdn4.iconfinder.com/data/icons/avatar-circle-1-1/72/63-512.png'}\r\n\t\t\t],\r\n\t\tmessagesData : [\r\n\t\t\t  {id: 1, message: 'Hello!'},\r\n\t\t\t  {id: 2, message: 'How are you?'},\r\n\t\t\t  {id: 3, message: 'Do you like react?'},\r\n\t\t\t  {id: 4, message: \"I'm just learning it now\"},\r\n\t\t\t  {id: 5, message: 'How is your IT-Kamasutra?'},\r\n\t\t\t  {id: 6, message: \"It's very interesting now\"},\r\n\t\t\t],\r\n\t\t// newMessageText: ''\r\n}\r\n\t\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase SEND_MESSAGE: \r\n\t\t\tlet newMessage = {\r\n\t\t\t\tid : 7,\r\n\t\t\t\tmessage : action.newMessageText\r\n\t\t\t\t};\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state, \r\n\t\t\t\tmessagesData: [...state.messagesData, newMessage],\r\n\t\t\t\t// newMessageText: ''\r\n\t\t\t};\r\n\t\t\t\t\t\r\n\t\tcase UPDATE_NEW_MESSAGE_TEXT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnewMessageText: action.newDiagText\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default dialogsReducer;","import {friendsAPI} from '../API/api.js'\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n \r\nlet initialState = {\r\n\tusers: [],\r\n\tpageSize: 15,\r\n\ttotalFriendsCount: 0,\r\n\tcurrentPage: 1,\r\n\tisFetching: true,\r\n\tfollowingInProgress: [],\r\n};\r\n\r\nexport const followSuccess = (userID) => ({type: FOLLOW, userID});\r\n\r\nexport const unfollowSuccess = (userID) => ({type: UNFOLLOW, userID});\r\n\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\n\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\n\r\nexport const setTotalUsersCount = (totalFriendsCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalFriendsCount});\r\n\r\nexport const setIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport const toggleFollowingProgress = (isFetching, userID) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userID});\r\n\r\n\r\nexport const getUsersThunkCreator = (page, pageSize) => async (dispatch) => {\r\n\t\tdispatch(setIsFetching(true));\r\n\t\tdispatch(setCurrentPage(page));\r\n\r\n\t\tlet data = await friendsAPI.getFriends(page, pageSize)\r\n\t\tdispatch(setIsFetching(false));\r\n\t\tdispatch(setUsers(data.items));\r\n\t\tdispatch(setTotalUsersCount(data.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userID, apiMethod, actionCreator) => {\r\n\tdispatch(toggleFollowingProgress(true, userID));\r\n                    \r\n    let response = await apiMethod(userID);\r\n\r\n    if (response.data.resultCode === 0) {\r\n    \tdispatch(actionCreator(userID));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userID));\r\n}\r\n\r\n\r\nexport const follow = (userID) => async (dispatch) => {\r\n\tdispatch(toggleFollowingProgress(true, userID));\r\n\r\n    followUnfollowFlow(dispatch, userID, friendsAPI.follow.bind(userID), followSuccess);\r\n}\r\n\r\n\r\nexport const unfollow = (userID) => async (dispatch) => {\r\n\tdispatch(toggleFollowingProgress(true, userID));  \r\n\r\n    followUnfollowFlow(dispatch, userID, friendsAPI.unfollow.bind(userID), unfollowSuccess);\r\n}\r\n\r\n\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n\t\tcase 'FAKE': \r\n\r\n\t\treturn {...state, fake: state.fake + 1}\r\n\t\t\r\n\t\tcase FOLLOW: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map( (u) => {\r\n\t\t\t\t\tif (u.id === action.userID) {\r\n\t\t\t\t\t\treturn {...u, followed: true}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse return u;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\tcase UNFOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map( (u) => {\r\n\t\t\t\t\tif (u.id === action.userID) {\r\n\t\t\t\t\t\treturn {...u, followed: false}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse return u;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\tcase SET_USERS:\r\n\t\t\treturn {\r\n\t\t\t\t...state, \r\n\t\t\t\tusers: action.users\r\n\t\t\t}\r\n\r\n\t\tcase SET_CURRENT_PAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state, \r\n\t\t\t\tcurrentPage: action.currentPage\r\n\t\t\t}\r\n\r\n\t\tcase SET_TOTAL_USERS_COUNT:\r\n\t\t\treturn {\r\n\t\t\t\t...state, \r\n\t\t\t\ttotalFriendsCount: action.count\r\n\t\t\t}\r\n\r\n\t\tcase TOGGLE_IS_FETCHING:\r\n\t\t\treturn {\r\n\t\t\t\t...state, \r\n\t\t\t\tisFetching: action.isFetching\r\n\t\t\t}\r\n\r\n\t\tcase TOGGLE_IS_FOLLOWING_PROGRESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfollowingInProgress: action.isFetching \r\n\t\t\t\t? [...state.followingInProgress, action.userID]\r\n\t\t\t\t: [...state.followingInProgress.filter(id => id != action.userID)]\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default friendsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Preloader_userPhoto__c8T2G\",\"selectedPage\":\"Preloader_selectedPage__39pS-\",\"lds_dual_ring\":\"Preloader_lds_dual_ring__3x-db\",\"lds-dual-ring\":\"Preloader_lds-dual-ring__2uozZ\"};","import React from 'react';\r\nimport * as axios from 'axios';\r\n\r\n// const baseUrl = 'https://social-network.samuraijs.com/api/1.0/';\r\n\r\n\r\nconst instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n\theaders: {\"API-KEY\": \"1ee5a7d0-492f-4228-bc66-5a58b902c8a2\"}\r\n})\r\n\r\nexport const friendsAPI = {\r\n\tgetFriends (currentPage, pageSize) {\r\n\t\treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\t.then(response => response.data)\r\n\t},\r\n\r\n\tpageChange (pageNumber, pageSize) {\r\n\t\treturn instance.get(`users?page=${pageNumber}&count=${pageSize}`)\r\n\t\t.then(response => response.data)\r\n\t},\r\n\tgetProfile(userId) {\r\n\t\tconsole.warn(\"Це застарілий метод. Використовуйте аналогічний метод, який міститься в об'єкті profileAPI\");\r\n\t\treturn profileAPI.getProfile(userId);\r\n\t}, // this is an obsolete method\r\n\tfollow(userId) {\r\n\t\treturn instance.post(`follow/${userId}`) \r\n\t},\r\n\tunfollow(userId) {\r\n\t\treturn instance.delete(`follow/${userId}`)\r\n\t}\r\n}\r\n\r\nexport const profileAPI = {\r\n\tgetProfile(userId) {\r\n\t\treturn instance.get(`profile/${userId}`);\r\n\t},\r\n\tgetStatus(userId) {\r\n\t\treturn instance.get(`profile/status/${userId}`);\r\n\t},\r\n\tupdateStatus(status) {\r\n\t\treturn instance.put(`profile/status`, {status: status});\r\n\t}\r\n}\r\n\r\nexport const authAPI = {\r\n\tgetMe () {\r\n\t\treturn instance.get(`auth/me`);\r\n\t},\r\n\tlogIn (email, password, rememberMe = false) {\r\n\t\treturn instance.post(`auth/logIn`, {email, password, rememberMe})\r\n\t},\r\n\tlogOut () {\r\n\t\treturn instance.delete(`auth/logIn`)\r\n\t},\r\n}\r\n\r\n// export const getFriends = (currentPage, pageSize) => {\r\n// \treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n// \t.then(response => response.data)\r\n// }\r\n\r\n// export const pageChange = (pageNumber, pageSize) => {\r\n// \treturn instance.get(`users?page=${pageNumber}&count=${pageSize}`)\r\n// \t.then(response => response.data)\r\n// }\r\n\r\n// export const followFreind = (u.id) => {\r\n// \treturn axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {}, \r\n//                               {withCredentials: true,\r\n//                                 headers: {\r\n//                                       \"API-KEY\": \"1ee5a7d0-492f-4228-bc66-5a58b902c8a2\"\r\n//                                     }\r\n//                               }) \r\n// }\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1U6pH\",\"item\":\"Navbar_item__1q64F\",\"active\":\"Navbar_active__1fLOD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__tOpBX\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {\r\n\treturn <header className={s.header}>\r\n        <img src=\"https://a.storyblok.com/f/47007/410x200/d1811e7e9b/joom-200x100.png\" alt=\"\"/>\r\n     \t<div className={s.loginBlock}>\r\n     \t\t{props.isAuthed\r\n                ? <div> {props.login} \r\n                        <button onClick={props.logoutThunk}>Log out</button> \r\n                    </div> \r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n     \t\t\r\n     \t\t\r\n     \t</div>\r\n{/*        <div className={s.loginBlock}>\r\n            {props.isAuthed? <LogOut /> : null }\r\n        </div>*/}\r\n      </header>\r\n}\r\n\r\nexport default Header;","import {authAPI} from '../API/api.js';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\n\r\nconst SET_USER_DATA = 'ADD-SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n\t\tuserId: null,\r\n      \temail: null,\r\n      \tlogin: null,\r\n      \tisAuthed: false\r\n    }\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_DATA: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t\t// isAuthed: true\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuthed) => ( {type: SET_USER_DATA, payload: {userId, email, login, isAuthed}} );\r\n\r\nexport const getAuthUserData = () => async (dispatch) => { //this is Thunk creator\r\n\tlet response = await authAPI.getMe(); \r\n\t\t\r\n\tif (response.data.resultCode === 0) {\r\n\t\tlet {id, login, email} = response.data.data;\r\n\t\t\tdispatch(setAuthUserData(id, email, login, true));\r\n\t\t}\r\n}\r\n\r\n\r\nexport const loginThunk = (email, password, rememberMe) => async (dispatch) => { //this is Thunk creator\r\n\t\r\n\r\n\tlet response = await authAPI.logIn(email, password, rememberMe, true);\r\n\t\r\n\tconsole.log(response.data);\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(getAuthUserData());\r\n\t}else {\r\n\t\tlet errorMessage = response.data.messages;\r\n\t\tdispatch(stopSubmit('login', {_error : errorMessage}));\r\n\t}\r\n}\r\n\r\n\r\nexport const logoutThunk = () => async (dispatch) => { //this is Thunk creator\r\n\tlet response = await authAPI.logOut();\r\n\t\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(setAuthUserData(null, null, null, false));\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header.jsx';\r\nimport * as axios from 'axios';\r\nimport {connect} from 'react-redux';\r\n// import {getAuthUserData} from './../../redux/auth-reducer.js';\r\nimport {logoutThunk} from './../../redux/auth-reducer.js';\r\n\r\n\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n\trender() {\r\n\t\treturn <Header {...this.props}/>\r\n\t}\r\n\t\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tisAuthed: state.auth.isAuthed,\r\n\tlogin: state.auth.login\r\n });\r\n\r\nexport default connect(mapStateToProps, {logoutThunk}) (HeaderContainer);","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst Navbar = () => {\r\n\treturn <nav className={classes.nav}>\r\n      <div >\r\n        <NavLink to=\"/profile\" className={classes.item} activeClassName={classes.active}>Profile</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/dialogs\" className={classes.item} activeClassName={classes.active}>Messages</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/feed\" className={classes.item} activeClassName={classes.active}>Feed</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/music\" className={classes.item} activeClassName={classes.active}>Music</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/settings\" className={classes.item} activeClassName={classes.active}>Settings</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/friends\" className={classes.item} activeClassName={classes.active}>Friends</NavLink>\r\n      </div>\r\n\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Post.module.css';\r\n \r\n\r\nconst Post = (props) => {\r\n\treturn (      \r\n    <div className={s.item}>\r\n      <img src=\"https://www.mcicon.com/wp-content/uploads/2021/01/People_User_1-copy-4.jpg\" alt=\"\" />\r\n      <div>\r\n        {props.message}\r\n      </div>\r\n\r\n      <div className={s.like}>\r\n        <a href=\"#\"> <span>Like {props.likesCount} </span> </a>\r\n      </div>\r\n\r\n    </div>  \r\n  )   \r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Posts/Post.jsx';\r\nimport { Field, reduxForm } from 'redux-form'; \r\nimport {required, maxLengthCreator} from './../../../utils/validators.js';\r\nimport {Textarea} from './../../common/FormsControls/FormsControls.js';\r\n\r\n\r\nconst maxLength15 = maxLengthCreator(15);\r\n\r\nlet NewPostForm = (props) => {\r\n  return (\r\n      <form onSubmit={props.handleSubmit} className={s.form}>\r\n        <div>\r\n          <Field component={Textarea} name=\"WriteNewPost\" \r\n            validate={[required, maxLength15]}/>\r\n        </div>\r\n        <div>\r\n          <button>Add post</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\nconst NewPostFormRedux = reduxForm({ \r\n  form: 'newPost'\r\n})(NewPostForm);\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n  console.log('render MyPosts component');\r\n  console.log(props);\r\n  \r\n  let postsElements = props.posts.map(function(p) {\r\n    return <Post message={p.message} likesCount={p.likesCount} />;\r\n  });\r\n\r\n  // let newPostElement = React.createRef();\r\n\r\n  // let onAddPost = (newPostTextForm) => {\r\n  //   props.addPost(newPostTextForm);\r\n  // }\r\n\r\n  // let onTextChange = () => {\r\n  //   let textChange = newPostElement.current.value;\r\n  //   props.updateNewPostText(textChange);\r\n  // }\r\n\r\n  const addNewPost = (formData) => {\r\n    props.addPost(formData.WriteNewPost);\r\n    // console.log(formData.WriteNewPost);\r\n    formData.WriteNewPost = '';\r\n\r\n  }\r\n\r\n\r\n\treturn <div className={s.postsBlock}>\r\n        <h3>My posts</h3>\r\n\r\n{/*        <div className={s.form}>\r\n          <div>\r\n            <textarea ref={newPostElement} value={props.profilePage.newPostText} onChange={onTextChange}/>\r\n          </div>\r\n          <div><button onClick= {onAddPost} >Add post</button></div>  \r\n        </div>*/}\r\n\r\n        <NewPostFormRedux onSubmit={addNewPost}/>\r\n\r\n        <div className={s.posts}>\r\n\r\n          {postsElements.reverse()}\r\n          \r\n         </div>\r\n      </div>\r\n  }\r\n\r\nexport default MyPosts;","import {friendsAPI, profileAPI} from '../API/api.js'\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\n// const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\n\r\n\r\nlet initialState = {\r\n\t\t\tposts : [\r\n\t\t\t  {id: 1, message: 'Hello, how are you?', likesCount: 10},\r\n\t\t\t  {id: 2, message: \"It's my first post\", likesCount: 2},\r\n\t\t\t  {id: 3, message: \"I'm trying React\", likesCount: 23},\r\n\t\t\t  {id: 4, message: \"I know something\", likesCount: 12},\r\n\t\t\t  {id: 5, message: \"Let's practice in React!\", likesCount: 55}\r\n\t\t\t]\r\n\t\t},\r\n\t\t\tprofile: null,\r\n\t\t\tstatus: \"\"\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST: \r\n\t\t\tlet newPost = {\r\n\t\t\t\tid : 6,\r\n\t\t\t\tmessage : action.newPostTextForm,\r\n\t\t\t\tlikesCount : 0};\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [...state.posts, newPost],\r\n\t\t\t\t// newPostText: \"\"\r\n\t\t\t}\r\n\r\n\t\t// case UPDATE_NEW_POST_TEXT:\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\tnewPostText: action.newText\r\n\t\t// \t}\r\n\r\n\t\tcase SET_USER_PROFILE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: action.profile\r\n\t\t\t}\r\n\r\n\t\tcase SET_USER_STATUS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const addPostActionCreator = (newPostTextForm) => ( {type: ADD_POST, newPostTextForm} );\r\n\r\n// export const updateNewPostTextActionCreator = (textChange) => \r\n// \t( { type: UPDATE_NEW_POST_TEXT,\r\n//     \tnewText: textChange } );\r\n\r\nexport const setUserProfile = (profile) => ( {type: SET_USER_PROFILE, profile} );\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n\tlet response = await friendsAPI.getProfile(userId);\r\n\tdispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const setUserStatus = (status) => ( {type: SET_USER_STATUS, status} );\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n\tlet response = await profileAPI.getStatus(userId);\r\n\tdispatch(setUserStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => { //this is a Thunk\r\n\tlet response = await profileAPI.updateStatus(status)\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(setUserStatus(status));\r\n\t}\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\n\r\nimport MyPosts from './MyPosts.jsx';\r\nimport {addPostActionCreator } from './../../../redux/profile-reducer.js';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\n// const MyPostsContainer = (props) => {\r\n\r\n// let state = props.store.getState();\r\n\r\n\r\n// let addPostUI = () => {\r\n//   props.store.dispatch(addPostActionCreator());\r\n// }\r\n\r\n// let onPostChange = (textChange) => {\r\n//   let action = updateNewPostTextActionCreator(textChange);\r\n//   props.store.dispatch (action);\r\n// }\r\n\r\n\r\n// \treturn  <MyPosts updateNewPostText={onPostChange}\r\n//           addPost={addPostUI} profilePage={state.profilePage}/>\r\n\r\n// }\r\n\r\nfunction mapStateToProps (state) {\r\n\t// console.log('MyPosts mapStateToProps');\r\n\treturn {\r\n\t\tposts: state.profilePage.posts\r\n\t}\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n\r\n\treturn {\r\n\t\taddPost: (newPostText) => {\r\n\t\t\tdispatch(addPostActionCreator(newPostText))\r\n\t\t},\r\n\t\t// updateNewPostText: (textChange) => {\r\n\t\t// \tdispatch(updateNewPostTextActionCreator(textChange))\r\n\t\t// }\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React, {useState, useEffect} from 'react';\r\nimport s from '../ProfileInfo/ProfileInfo.module.css';\r\n// import Preloader from './../../Friends/Preloader/Preloader.jsx'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [locStatus, setLocStatus] = useState(props.status);\r\n\r\n    useEffect ( () => {\r\n        setLocStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false); \r\n        props.updateStatus(locStatus) \r\n    }\r\n    const onStatusChange = (e) => {\r\n        setLocStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n    <div>\r\n                \r\n               <div>\r\n                 <span className={s.fullname}>{props.profile.fullName}</span>\r\n               </div>\r\n              \r\n              { !editMode && \r\n                <div>\r\n                  <span className={s.status_content} onDoubleClick={activateEditMode}>\r\n                      {props.status}\r\n                  </span>\r\n                </div>\r\n              } \r\n            {editMode &&\r\n              <div>\r\n                <input autoFocus={true} onBlur={deActivateEditMode} onChange={onStatusChange}\r\n                value={locStatus}/>\r\n              </div>\r\n            }\r\n    </div>\r\n    )\r\n  }\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from './../../Friends/Preloader/Preloader.jsx'\r\nimport ProfileStatusWihtHooks from '../ProfileStatus/ProfileStatusWithHooks.js'\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n\tif (!profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\treturn <div>\r\n          <div className={s.descriptionBlock}>\r\n            <img src={profile.photos.large} alt=\"\" />\r\n          </div>\r\n          <ProfileStatusWihtHooks profile={profile} status={status}\r\n                  updateStatus={updateStatus}/>\r\n    </div>\r\n\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer.jsx';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n\t// if (!props.isAuthed) return <Redirect to={\"/login\"} />\r\n\t\r\n\r\n\treturn <div>\r\n\t  <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n      <MyPostsContainer />\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Profile; ","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Profile from './Profile.jsx';\r\nimport * as axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport {getUserProfile, getStatus, updateStatus} from './../../redux/profile-reducer.js';\r\nimport {friendsAPI} from '../../API/api.js';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {withAuthRedirect} from './../../HOC/withAuthRedirect.js';\r\nimport {compose} from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\t\r\n\t\tlet userId = this.props.match.params.userId; \r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push('login') // Страратися не використовувати\r\n\t\t\t\t//цей метод, оскільки він втручається в ЖЦ компоненти\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\tthis.props.getStatus(userId);\r\n\t}\r\n \r\n\trender() {  \r\n\t\treturn <Profile {...this.props} profile={this.props.profile}\r\n\t\t\t\tstatus={this.props.status} updateStatus={this.props.updateStatus}/>\r\n\t}\r\n}\r\n\r\n// compose(\r\n// \tconnect(mapStateToProps, {getUserProfile})\r\n// \twithRouter,\r\n// \twithAuthRedirect\r\n// )(ProfileContainer)\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer); // H O C used\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status, \r\n\tauthorizedUserId: state.auth.userId,\r\n\tisAuthed: state.auth.isAuthed\r\n})\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n\twithRouter,\r\n\twithAuthRedirect\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './Feed.module.css'\r\n\r\n// variable with some HTML code\r\nlet someText = [<div>\r\n\t\t<h2>Hello, this is text <strong>inside</strong> <i>variable</i></h2>\r\n\t<button><strong>Just</strong> click</button>\r\n\t\t<ul>Task list\r\n\t\t\t<li>HTML</li>\r\n\t\t\t<li>CSS</li>\r\n\t\t\t<li>JS</li>\r\n\t\t\t<li>REACT</li>\r\n\t\t</ul>\r\n\t</div>, <h1>It works!!!</h1>\r\n]\r\n\r\nclass Feed extends React.Component {\r\n\r\n\tstate = {\r\n\t    time: new Date().toLocaleTimeString()\r\n  \t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('component Feed DidMount');\r\n\r\n\r\n\t\tthis.testVar = setInterval(\r\n\t\t()=> this.setState(\r\n\t\t\t{time: new Date().toLocaleTimeString()}\r\n\t\t), 1000);\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tconsole.log('did update')\r\n\t\tconsole.log(this.state)\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log('good by Feed');\r\n\t\tclearInterval(this.testVar);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Feed</h1>\r\n\r\n\t      <h1>Привет, мир!</h1>\r\n\t      <div className={s.timeBlock}>\r\n\t      \t<h2>Зараз <span className={s.clock}>{ this.state.time } </span></h2>\r\n\t      </div>\r\n\t      {someText}\r\n\t\t</div>\r\n\t\t) \t\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Feed;","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\nconst Music = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tMusic\r\n\t\t</div>\r\n\t) \t\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form'; \r\nimport {Input} from './../common/FormsControls/FormsControls.js';\r\nimport {required, maxLengthCreator} from './../../utils/validators.js';\r\nimport {loginThunk} from './../../redux/auth-reducer.js';\r\nimport {Redirect} from 'react-router-dom';\r\nimport style from './../common/FormsControls/FormsControls.module.css';\r\n\r\n\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n\r\n\treturn (\r\n\t\t\t<form onSubmit={handleSubmit} className={style.form}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Field component={Input} type=\"text\" name=\"email\" \r\n\t\t\t\t\tplaceholder='Email' validate={[required]}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Field component={Input} name=\"password\" type=\"password\" \r\n\t\t\t\t\tplaceholder='password' validate={[required, maxLength20]} />\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Field component={'input'} id=\"rememberMe\" name=\"rememberMe\" type=\"checkbox\"/>\r\n\t\t\t\t\t<label htmlFor=\"rememberMe\"> Remember me </label>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type='submit'>Login</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{ \r\n\t\t\t\t\terror && <div className={style.formSummaryError}>\r\n\t\t\t\t\t\t\t{error}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</form>\r\n\t\t)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ \r\n\tform: 'login'\r\n})(LoginForm)\r\n\r\n// evaluate it for ContactForm component\r\n\r\nconst Login = (props) => {\r\n\tconst onSubmit = (formData) => {\r\n\t\tprops.loginThunk(formData.email, formData.password, formData.rememberMe);\r\n\t}\r\n\r\n\r\n\r\n\tif (props.isAuthed) {\r\n\t\treturn <Redirect to={`/profile`} />\r\n\t}else {\r\n\t\treturn <div>\r\n\t\t\t<h1>LOGIN</h1>\r\n\t\t\t<LoginReduxForm onSubmit={onSubmit}/>\r\n\t\t</div>\r\n\t}\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuthed : state.auth.isAuthed\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginThunk})(Login);","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\nconst Settings = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tSettings\r\n\t\t</div>\r\n\t) \t\r\n}\r\n\r\nexport default Settings;","import {authAPI} from '../API/api.js';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {getAuthUserData} from './auth-reducer.js';\r\n\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n\t\tinitialized: false,\r\n    }\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n\t\tcase INITIALIZED_SUCCESS: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinitialized: true\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const initializedSuccess = () => ( {type: INITIALIZED_SUCCESS} );\r\n\r\nexport const initializeApp = () => (dispatch) => { //this is Thunk creator\r\n\tlet promise = dispatch(getAuthUserData());\r\n\tPromise.all([promise])\r\n\t\t.then(() => {\r\n\t\t\tdispatch(initializedSuccess())\r\n\t\t});\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default appReducer;","import React, {Suspense} from 'react';\r\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\r\nimport './App.css';\r\nimport HeaderContainer from './Components/Header/HeaderContainer.jsx';\r\nimport Navbar from './Components/Navbar/Navbar.jsx';\r\nimport ProfileContainer from './Components/Profile/ProfileContainer.jsx';\r\n// import DialogsContainer from './Components/Dialogs/DialogsContainer.jsx';\r\nimport Feed from './Components/Feed/Feed.jsx';\r\nimport Music from './Components/Music/Music.jsx';\r\nimport Login from './Components/Login/Login.jsx';\r\nimport Settings from './Components/Settings/Settings.jsx';\r\n// import FriendsContainer from './Components/Friends/FriendsContainer.jsx';\r\nimport Preloader from './Components/Friends/Preloader/Preloader.jsx';\r\n// import Preloader from './redux/auth-reducer.js';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {initializeApp} from './redux/app-reducer.js'\r\n\r\nconst FriendsContainer = React.lazy(()=> import('./Components/Friends/FriendsContainer.jsx'));\r\nconst DialogsContainer = React.lazy(()=> import('./Components/Dialogs/DialogsContainer.jsx'));\r\n// const ProfileContainer = React.lazy(()=> import('./Components/Profile/ProfileContainer.jsx'));\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log('App did update')\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n   return (\r\n\r\n      <div className=\"app-wrapper\">\r\n      <Suspense fallback={Preloader}>\r\n        <HeaderContainer />\r\n\r\n        <Navbar />\r\n        \r\n        <div className=\"app-wrapper-content\">\r\n          <Route path='/profile/:userId?' render={ () => \r\n              <ProfileContainer /> }\r\n          /> \r\n\r\n          <Route path='/dialogs' render={ () =>\r\n              <DialogsContainer  />} \r\n          />\r\n          <Route path='/friends' render={ () =>\r\n              <FriendsContainer />} />\r\n\r\n          <Route path='/feed' component={Feed} />\r\n          <Route path='/music' component={Music} />\r\n          <Route path='/settings' component={Settings} />\r\n          <Route path='/login' render={ () =>\r\n              <Login />} />\r\n          \r\n    \t</div>\r\n      </Suspense>\r\n      </div>   \r\n   );\r\n }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {initializeApp})) (App);\r\n","let initialState = {\r\n\tsidebar : {}\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\t\r\n\t\r\n\treturn state;\r\n}\r\n\r\nexport default sidebarReducer;","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport profileReducer from './profile-reducer.js';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer.js';\r\nimport friendsReducer from './friends-reducer.js';\r\nimport authReducer from './auth-reducer.js';\r\nimport appReducer from './app-reducer.js';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\n\r\nlet reducers = combineReducers({\r\n\tprofilePage: profileReducer,\r\n\tdialogsPage: dialogsReducer,\r\n\tsidebar: sidebarReducer,\r\n\tfriendsPage: friendsReducer,\r\n\tauth: authReducer,\r\n\tform: formReducer,\r\n\tapp: appReducer\r\n});\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n ));\r\n\r\nwindow.store = store;\r\n// window.this = this;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './App';\nimport store from './redux/redux-store';\nimport {Provider} from 'react-redux';\n\n\nlet reRenderEntireTree = (state) => {\n\tReactDOM.render(\n\t  <BrowserRouter>\n\t  \t<Provider store={store}>\n\t    \t<App />\n\t    </Provider>\n\t  </BrowserRouter>,\n\t  document.getElementById('root')\n\t);\n}\n\nreRenderEntireTree (store.getState());\n\nstore.subscribe (()=> {\n\tlet state = store.getState();\n\treRenderEntireTree(state);\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// state={state} dispatch={store.dispatch.bind(store)} \n\n// state={state} dispatch={store.dispatch.bind(store)}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormsControls_form__1xDbE\",\"formControl\":\"FormsControls_formControl__m70zB\",\"error\":\"FormsControls_error__WNGRJ\",\"formSummaryError\":\"FormsControls_formSummaryError__3hsYH\"};","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nexport const required = (value) => {\r\n\tif (value) return undefined; \r\n\treturn 'The field is required';  \r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\tif (value && value.length > maxLength) return `Max length is ${maxLength} symbols`; \r\n\treturn undefined;  \r\n}\r\n\r\nexport const maxLength = (value) => {\r\n\tif (value && value.length > 30) return \"Max length is 30 symbols\"; \r\n\treturn undefined;  \r\n}\r\n\r\nexport default required;","import React from 'react';\r\nimport styles from './FormsControls.module.css'\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n\tlet hasError = meta.touched && meta.error \r\n\treturn (\r\n\t\t<div className={ styles.formControl + ' ' + (hasError ? styles.error : '') }>\r\n\t\t\t<div>\r\n\t\t\t\t<textarea {...input} {...props}/>\r\n\t\t\t</div>\r\n\t\t\t{hasError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n\tlet hasError = meta.touched && meta.error \r\n\treturn (\r\n\t\t<div className={ styles.formControl + ' ' + (hasError ? styles.error : '') }>\r\n\t\t\t<div>\r\n\t\t\t\t<input {...input} {...props}/>\r\n\t\t\t</div>\r\n\t\t\t{hasError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport styles from './Preloader.module.css'; \r\n\r\n\r\n\r\nconst Preloader = (props) => {\r\n\r\n\r\n\t\t\r\n\treturn  <div className={styles.lds_dual_ring}></div>\r\n\t\t\r\n}\r\n  \t\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2ek1n\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__lT6Sq\",\"fullname\":\"ProfileInfo_fullname__3fGsF\",\"status_content\":\"ProfileInfo_status_content__3B9T0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__26BOD\",\"posts\":\"MyPosts_posts__WVjTz\",\"form\":\"MyPosts_form__21L26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3-E6Z\",\"loginBlock\":\"Header_loginBlock__32psG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ND1Bb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeBlock\":\"Feed_timeBlock__1vFVd\",\"clock\":\"Feed_clock__1ZjR_\"};"],"sourceRoot":""}