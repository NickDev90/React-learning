{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","AddMessageFormByReduxForm","reduxForm","form","props","maxLength50","maxLengthCreator","onSubmit","handleSubmit","Field","component","Textarea","type","name","placeholder","validate","required","DialogItem","path","id","className","s","dialog","dialog_item","activeClassName","active","to","member","dial_ava","src","alt","send_text","values","console","log","message_text","Message","message","Dialogs","newMessageText","dialogsPage","dialogsElements","dialogsData","map","sendMessage","onTextMessageChange","key","messagesElements","messagesData","mess","dialogs","dialogsItems","messages","DialogsContainer","compose","connect","state","dispatch","messageByReduxForm","sendMessageCreator","textChange","updateNewMessageTextCreator","withAuthRedirect"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,YAAc,6BAA6B,OAAS,wBAAwB,UAAY,2BAA2B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,SAAW,4B,gIC0BpWC,EAA4BC,YAAU,CAC3CC,KAAM,eAD2BD,EAlBX,SAACE,GACvB,IAAMC,EAAcC,YAAiB,IAErC,OACG,0BAAMC,SAAUH,EAAMI,cACrB,6BACC,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAK,OACjCC,KAAK,eAAeC,YAAY,qBAChCC,SAAU,CAACC,IAAUX,MAGtB,6BACC,4BAAQO,KAAK,UAAb,iBAqDSK,EAzCI,SAACb,GAEnB,IAAIc,EAAO,YAAcd,EAAMe,GAoB/B,OAAO,yBAAKC,UAAWC,IAAEC,QACtB,kBAAC,IAAD,CAASF,UAAWC,IAAEE,YAAaC,gBAAiBH,IAAEI,OAAQC,GAAIR,GACjE,yBAAKE,UAAWC,IAAEM,QACjB,yBAAKP,UAAWC,IAAEO,SAAUC,IAAKzB,EAAMyB,IAAKC,IAAI,KAC9C1B,EAAMS,MAER,yBAAKO,UAAWC,IAAEU,WAEjB,kBAAC9B,EAAD,CAA2BM,SAbX,SAACyB,GAEtBC,QAAQC,IAAIF,EAAOG,qBCnCNC,G,OAXC,SAAChC,GAEhB,OAEC,yBAAKgB,UAAWC,IAAEgB,SAChBjC,EAAMiC,WC+BKC,EAhCC,SAAClC,GAGhB,IAAImC,EAAiBnC,EAAMoC,YAAYD,eAGnCE,EAAkBrC,EAAMoC,YAAYE,YAAYC,KAAK,SAACrB,GACzD,OAAO,kBAAC,EAAD,CAAYT,KAAMS,EAAOT,KAAMM,GAAIG,EAAOH,GAAIU,IAAKP,EAAOO,IAChEU,eAAgBA,EAAgBK,YAAaxC,EAAMwC,YACnDC,oBAAqBzC,EAAMyC,oBAAqBC,IAAKxB,EAAOH,QAI1D4B,EAAmB3C,EAAMoC,YAAYQ,aAAaL,KAAI,SAASM,GAClE,OAAO,kBAAC,EAAD,CAASZ,QAASY,EAAKZ,QAASS,IAAKG,EAAK9B,QAMlD,OACC,yBAAKC,UAAWC,IAAE6B,SACjB,yBAAK9B,UAAWC,IAAE8B,cAChBV,GAEF,yBAAKrB,UAAWC,IAAE+B,UAChBL,K,yBCeL,IAAMM,EAAmBC,YACxBC,aAtBD,SAA0BC,GACzB,MAAO,CACNhB,YAAagB,EAAMhB,gBAIrB,SAA6BiB,GAC5B,MAAO,CACNb,YAAa,SAACc,GACbD,EAASE,YAAmBD,KAE7Bb,oBAAqB,SAACe,GACrBH,EAASI,YAA4BD,SAWvCE,IAFwBR,CAGvBhB,GAIae","file":"static/js/4.f9bcfb75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3S5Yj\",\"dialog\":\"Dialogs_dialog__2yKrU\",\"dialogsItems\":\"Dialogs_dialogsItems__ho8ay\",\"dialog_item\":\"Dialogs_dialog_item__3Ou16\",\"member\":\"Dialogs_member__2yV70\",\"send_text\":\"Dialogs_send_text__3KZQu\",\"active\":\"Dialogs_active__3W3gF\",\"messages\":\"Dialogs_messages__3Zong\",\"message\":\"Dialogs_message__3id9k\",\"dial_ava\":\"Dialogs_dial_ava__3yRTa\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form'; \r\nimport {required, maxLengthCreator} from './../../../utils/validators.js';\r\nimport {Textarea} from './../../common/FormsControls/FormsControls.js';\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n\tconst maxLength50 = maxLengthCreator(50);\r\n\r\n\treturn (\r\n\t\t\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Field component={Textarea} type=\"text\" \r\n\t\t\t\t\t\tname=\"message_text\" placeholder='Write your message'\r\n\t\t\t\t\t\tvalidate={[required, maxLength50]}/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button type='submit'>Send 222</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t)\r\n}\r\n\r\nconst AddMessageFormByReduxForm = reduxForm({\r\n\tform: 'messageForm'\r\n})(AddMessageForm);\r\n\r\n\r\n\r\nconst DialogItem = (props) => {\r\n\r\n\tlet path = \"/dialogs/\" + props.id;\r\n\r\n\t// let newPostElement = React.createRef();\r\n\r\n\t// let send = () => {\r\n\t// \t  let text = newPostElement.current.value;\r\n\t// \t  props.sendMessage(); \r\n\t// }\r\n\r\n\t// let onTextChange = (e) => {\r\n\t// \t  let textChange = e.target.value;\r\n\t// \t  props.onTextMessageChange(textChange);\r\n\t// }\r\n\r\n\r\n\tconst addNewMessage = (values) => {\r\n\t\tdebugger\r\n\t\tconsole.log(values.message_text);\r\n\t};\r\n\r\n\treturn <div className={s.dialog}>\r\n\t\t\t\t<NavLink className={s.dialog_item} activeClassName={s.active} to={path}>\r\n\t\t\t\t\t<div className={s.member}>\r\n\t\t\t\t\t\t<img className={s.dial_ava} src={props.src} alt=\"\" />\r\n\t\t\t\t\t \t{props.name} \r\n\t\t\t\t \t</div> \r\n\t\t\t\t \t<div className={s.send_text}>\r\n\r\n\t\t\t\t \t\t<AddMessageFormByReduxForm onSubmit={addNewMessage} />\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</NavLink> \r\n\t\t\t</div>\r\n\t\t\tdebugger\r\n};\r\n\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { Form, Field } from 'react-final-form';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n\treturn (\r\n\r\n\t\t<div className={s.message}> \r\n\t\t\t{props.message}\r\n\t\t</div>\r\n\t)\r\n};\r\n \r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Redirect} from 'react-router-dom';\r\nimport DialogItem from './DialogItem/DialogItem.jsx';\r\nimport Message from './Message/Message.jsx';\r\nimport {connect} from 'react-redux';\r\n\r\n  \r\n\r\nconst Dialogs = (props) => {\r\n\r\n\t\r\n\tlet newMessageText = props.dialogsPage.newMessageText;\r\n\r\n\r\n\tlet dialogsElements = props.dialogsPage.dialogsData.map( (dialog) => {\r\n\t\treturn <DialogItem name={dialog.name} id={dialog.id} src={dialog.src}\r\n\t\t newMessageText={newMessageText} sendMessage={props.sendMessage}\r\n\t\t\tonTextMessageChange={props.onTextMessageChange} key={dialog.id}/>\r\n\t}); \r\n\r\n\r\n\tlet messagesElements = props.dialogsPage.messagesData.map(function(mess) {\r\n\t\treturn <Message message={mess.message} key={mess.id}/>\r\n\t});\r\n\r\n\r\n\t// if (!props.isAuthed)\treturn <Redirect to={\"/login\"} />\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogsItems}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.messages}>\r\n\t\t\t\t{messagesElements}\r\n\t\t\t</div>\r\n\t\t</div>\t\r\n\t) \t\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Dialogs from './Dialogs.jsx';\r\nimport {updateNewMessageTextCreator, sendMessageCreator} from './../../redux/dialogs-reducer.js';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from './../../HOC/withAuthRedirect.js';\r\nimport {compose} from 'redux';\r\n\r\n\r\n\r\n// const DialogsContainer = (props) => {\r\n\r\n// \tlet state = props.store.getState();\r\n// \tlet dialogsPage = state.dialogsPage;\r\n\r\n// \tlet sendMessage = () => {\r\n// \t\tprops.store.dispatch(sendMessageCreator()); \r\n// \t}\r\n\r\n// \tlet onTextMessageChange = (textChange) => {\r\n// \t\tprops.store.dispatch(updateNewMessageTextCreator(textChange));\r\n// \t}\r\n\r\n// \treturn (\r\n// \t\t<Dialogs sendMessage={sendMessage}\r\n// \t\t\tonTextMessageChange={onTextMessageChange} dialogsPage={dialogsPage}\r\n// \t\t />\r\n// \t)\r\n// }\r\n\r\nfunction mapStateToProps (state) {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage\r\n\t}\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n\treturn {\r\n\t\tsendMessage: (messageByReduxForm) => {\r\n\t\t\tdispatch(sendMessageCreator(messageByReduxForm))\r\n\t\t},\r\n\t\tonTextMessageChange: (textChange) => {\r\n\t\t\tdispatch(updateNewMessageTextCreator(textChange))\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\n// let AuthRedirectDialogs = withAuthRedirect(Dialogs);\r\n\r\nconst DialogsContainer = compose (\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n\r\nexport default DialogsContainer;\r\n\r\n"],"sourceRoot":""}