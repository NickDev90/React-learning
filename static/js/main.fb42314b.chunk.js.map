{"version":3,"sources":["assets/images/user-young-boy.jpg","API/api.js","HOC/withAuthRedirect.js","redux/dialogs-reducer.js","redux/friends-reducer.js","Components/Friends/Preloader/Preloader.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Navbar/Navbar.module.css","Components/Profile/Profile.module.css","serviceWorker.js","Components/Header/Header.jsx","redux/auth-reducer.js","Components/Header/HeaderContainer.jsx","Components/Navbar/Navbar.jsx","Components/Profile/MyPosts/Posts/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","redux/profile-reducer.js","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/ProfileInfo/ProfileData.jsx","Components/Profile/ProfileInfo/ProfileDataEditForm.jsx","Components/Profile/ProfileStatus/ProfileStatusWithHooks.js","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","Components/Feed/Feed.jsx","Components/Music/Music.jsx","Components/Login/Login.jsx","Components/Settings/Settings.jsx","redux/app-reducer.js","App.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","Components/common/FormsControls/FormsControls.module.css","utils/validators.js","Components/common/FormsControls/FormsControls.js","Components/Friends/Preloader/Preloader.jsx","Components/Profile/MyPosts/MyPosts.module.css","Components/Header/Header.module.css","Components/Profile/MyPosts/Posts/Post.module.css","Components/Feed/Feed.module.css"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","friendsAPI","getFriends","currentPage","pageSize","get","then","response","data","pageChange","pageNumber","getProfile","userId","console","warn","profileAPI","follow","post","unfollow","delete","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","getMe","logIn","email","password","rememberMe","captcha","logOut","securityAPI","getCaptchaUrl","mapStateToPropsForRedirect","state","isAuthed","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","sendMessageCreator","type","updateNewMessageTextCreator","textChange","newDiagText","initialState","dialogsData","id","name","src","messagesData","message","dialogsReducer","action","newMessage","newMessageText","users","totalFriendsCount","isFetching","followingInProgress","followSuccess","userID","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","count","setIsFetching","toggleFollowingProgress","getUsersThunkCreator","page","dispatch","a","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","bind","friendsReducer","fake","map","u","followed","filter","Boolean","window","location","hostname","match","Header","className","s","header","alt","loginBlock","login","onClick","logoutThunk","captchaUrl","setAuthUserData","payload","setCaptchaUrl","getAuthUserData","getCaptcha","url","authReducer","HeaderContainer","Navbar","classes","nav","item","activeClassName","active","Post","like","href","likesCount","maxLength15","maxLengthCreator","NewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","MyPosts","log","postsElements","posts","p","key","postsBlock","addPost","WriteNewPost","reverse","getUserProfile","setUserStatus","profileReducer","newPost","newPostTextForm","photos","MyPostsContainer","profilePage","newPostText","Contacts","contactTitle","contactValue","ProfileData","onEditProfile","isOwner","fullInfo","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactsList","Object","keys","contacts","ProfileDataEditWithReduxForm","error","placeholder","value","contact","formSummaryError","ProfileStatusWithHooks","useState","editMode","setEditMode","locStatus","setLocStatus","useEffect","fullname","status_content","onDoubleClick","autoFocus","onBlur","onChange","e","currentTarget","ProfileInfo","Preloader","descriptionBlock","large","userPhoto","target","files","length","initialValues","Profile","ProfileContainer","params","authorizedUserId","history","push","refreshProfile","prevProps","prevState","snapshot","compose","file","getState","errorMessage","messages","stopSubmit","_error","Promise","reject","withRouter","someText","Feed","time","Date","toLocaleTimeString","testVar","setInterval","setState","clearInterval","timeBlock","clock","Music","maxLength20","LoginReduxForm","style","Input","htmlFor","captchaBlock","captchaImg","loginThunk","Settings","initialized","appReducer","FriendsContainer","lazy","DialogsContainer","App","catchAllUnhandledErrors","alert","initializeApp","addEventListener","removeEventListener","fallback","exact","path","render","app","promise","all","sidebar","sidebarReducer","reducers","combineReducers","dialogsPage","friendsPage","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","reRenderEntireTree","ReactDOM","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","maxLength","input","meta","hasError","touched","styles","formControl","lds_dual_ring"],"mappings":"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","file":"static/js/main.fb42314b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-young-boy.899048ab.jpg\";","import React from 'react';\r\nimport * as axios from 'axios';\r\n\r\n// const baseUrl = 'https://social-network.samuraijs.com/api/1.0/';\r\n\r\n\r\nconst instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n\theaders: {\"API-KEY\": \"1ee5a7d0-492f-4228-bc66-5a58b902c8a2\"}\r\n})\r\n\r\nexport const friendsAPI = {\r\n\tgetFriends (currentPage, pageSize) {\r\n\t\treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\t.then(response => response.data)\r\n\t},\r\n\r\n\tpageChange (pageNumber, pageSize) {\r\n\t\treturn instance.get(`users?page=${pageNumber}&count=${pageSize}`)\r\n\t\t.then(response => response.data)\r\n\t},\r\n\tgetProfile(userId) {\r\n\t\tconsole.warn(\"Це застарілий метод. Використовуйте аналогічний метод, який міститься в об'єкті profileAPI\");\r\n\t\treturn profileAPI.getProfile(userId);\r\n\t}, // this is an obsolete method\r\n\tfollow(userId) {\r\n\t\treturn instance.post(`follow/${userId}`) \r\n\t},\r\n\tunfollow(userId) {\r\n\t\treturn instance.delete(`follow/${userId}`)\r\n\t}\r\n}\r\n\r\nexport const profileAPI = {\r\n\tgetProfile(userId) {\r\n\t\treturn instance.get(`profile/${userId}`);\r\n\t},\r\n\tgetStatus(userId) {\r\n\t\treturn instance.get(`profile/status/${userId}`);\r\n\t},\r\n\tupdateStatus(status) {\r\n\t\treturn instance.put(`profile/status`, {status: status});\r\n\t},\r\n\tsavePhoto(photoFile) {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('image', photoFile);\r\n\r\n\t\treturn instance.put(`profile/photo`, formData, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'multipart/form-data'\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tsaveProfile(profile) {\r\n\t\treturn instance.put(`profile`, profile);\r\n\t}\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n\tgetMe () {\r\n\t\treturn instance.get(`auth/me`);\r\n\t},\r\n\tlogIn (email, password, rememberMe = false, captcha) {\r\n\t\treturn instance.post(`auth/logIn`, {email, password, rememberMe, captcha})\r\n\t},\r\n\tlogOut () {\r\n\t\treturn instance.delete(`auth/logIn`)\r\n\t},\r\n}\r\n\r\n\r\nexport const securityAPI = {\r\n\tgetCaptchaUrl () {\r\n\t\treturn instance.get(`security/get-captcha-url`);\r\n\t}\r\n}\r\n\r\n// export const getFriends = (currentPage, pageSize) => {\r\n// \treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n// \t.then(response => response.data)\r\n// }\r\n\r\n// export const pageChange = (pageNumber, pageSize) => {\r\n// \treturn instance.get(`users?page=${pageNumber}&count=${pageSize}`)\r\n// \t.then(response => response.data)\r\n// }\r\n\r\n// export const followFreind = (u.id) => {\r\n// \treturn axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {}, \r\n//                               {withCredentials: true,\r\n//                                 headers: {\r\n//                                       \"API-KEY\": \"1ee5a7d0-492f-4228-bc66-5a58b902c8a2\"\r\n//                                     }\r\n//                               }) \r\n// }\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\tisAuthed: state.auth.isAuthed\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuthed) return <Redirect to={\"/login\"} />\r\n\r\n\t\t\treturn <Component {...this.props} />\r\n\t\t}\r\n\t}\r\n\r\n\tlet ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n\r\n\treturn ConnectedRedirectComponent;\r\n}","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nexport const sendMessageCreator = () => ( {type: SEND_MESSAGE} );\r\n\r\nexport const updateNewMessageTextCreator = (textChange) => \r\n\t( { type: UPDATE_NEW_MESSAGE_TEXT,\r\n    \tnewDiagText: textChange } );\r\n\r\nlet initialState = {\r\n\t\tdialogsData : [\r\n\t\t\t  {id:1, name:'Kolyan', src:'https://img.icons8.com/bubbles/2x/user-male.png'}, \r\n\t\t\t  {id:'Mariana', name:'Mariana', src: 'https://www.pngkey.com/png/full/781-7813239_brown-pigtail-hair-lady-icon-icon.png'}, \r\n\t\t\t  {id:3, name:'Lesia', src: 'https://cdn2.iconfinder.com/data/icons/school-flat-circle/512/Girl_lady_user_woman-512.png'}, \r\n\t\t\t  {id: 4, name:'Andrew', src: 'https://cdn.dribbble.com/users/79571/screenshots/2562782/user_-_illustration.png'}, \r\n\t\t\t  {id:6, name:'Iryna', src: 'https://cdn2.iconfinder.com/data/icons/people-flat-design/64/Woman-Lady-Girl-Female-Avatar-People-Happy-512.png'},\r\n\t\t\t  {id:'Oksi', name:'Oksana', src: 'https://cdn4.iconfinder.com/data/icons/avatar-circle-1-1/72/63-512.png'}\r\n\t\t\t],\r\n\t\tmessagesData : [\r\n\t\t\t  {id: 1, message: 'Hello!'},\r\n\t\t\t  {id: 2, message: 'How are you?'},\r\n\t\t\t  {id: 3, message: 'Do you like react?'},\r\n\t\t\t  {id: 4, message: \"I'm just learning it now\"},\r\n\t\t\t  {id: 5, message: 'How is your IT-Kamasutra?'},\r\n\t\t\t  {id: 6, message: \"It's very interesting now\"},\r\n\t\t\t],\r\n\t\t// newMessageText: ''\r\n}\r\n\t\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase SEND_MESSAGE: \r\n\t\t\tlet newMessage = {\r\n\t\t\t\tid : 7,\r\n\t\t\t\tmessage : action.newMessageText\r\n\t\t\t\t};\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state, \r\n\t\t\t\tmessagesData: [...state.messagesData, newMessage],\r\n\t\t\t\t// newMessageText: ''\r\n\t\t\t};\r\n\t\t\t\t\t\r\n\t\tcase UPDATE_NEW_MESSAGE_TEXT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnewMessageText: action.newDiagText\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default dialogsReducer;","import {friendsAPI} from '../API/api.js'\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n \r\nlet initialState = {\r\n\tusers: [],\r\n\tpageSize: 15,\r\n\ttotalFriendsCount: 0,\r\n\tcurrentPage: 1,\r\n\tisFetching: true,\r\n\tfollowingInProgress: [],\r\n};\r\n\r\nexport const followSuccess = (userID) => ({type: FOLLOW, userID});\r\n\r\nexport const unfollowSuccess = (userID) => ({type: UNFOLLOW, userID});\r\n\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\n\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\n\r\nexport const setTotalUsersCount = (totalFriendsCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalFriendsCount});\r\n\r\nexport const setIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport const toggleFollowingProgress = (isFetching, userID) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userID});\r\n\r\n\r\nexport const getUsersThunkCreator = (page, pageSize) => async (dispatch) => {\r\n\t\tdispatch(setIsFetching(true));\r\n\t\tdispatch(setCurrentPage(page));\r\n\r\n\t\tlet data = await friendsAPI.getFriends(page, pageSize)\r\n\t\tdispatch(setIsFetching(false));\r\n\t\tdispatch(setUsers(data.items));\r\n\t\tdispatch(setTotalUsersCount(data.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userID, apiMethod, actionCreator) => {\r\n\tdispatch(toggleFollowingProgress(true, userID));\r\n                    \r\n    let response = await apiMethod(userID);\r\n\r\n    if (response.data.resultCode === 0) {\r\n    \tdispatch(actionCreator(userID));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userID));\r\n}\r\n\r\n\r\nexport const follow = (userID) => async (dispatch) => {\r\n\tdispatch(toggleFollowingProgress(true, userID));\r\n\r\n    followUnfollowFlow(dispatch, userID, friendsAPI.follow.bind(userID), followSuccess);\r\n}\r\n\r\n\r\nexport const unfollow = (userID) => async (dispatch) => {\r\n\tdispatch(toggleFollowingProgress(true, userID));  \r\n\r\n    followUnfollowFlow(dispatch, userID, friendsAPI.unfollow.bind(userID), unfollowSuccess);\r\n}\r\n\r\n\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n\t\tcase 'FAKE': \r\n\r\n\t\treturn {...state, fake: state.fake + 1}\r\n\t\t\r\n\t\tcase FOLLOW: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map( (u) => {\r\n\t\t\t\t\tif (u.id === action.userID) {\r\n\t\t\t\t\t\treturn {...u, followed: true}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse return u;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\tcase UNFOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map( (u) => {\r\n\t\t\t\t\tif (u.id === action.userID) {\r\n\t\t\t\t\t\treturn {...u, followed: false}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse return u;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\tcase SET_USERS:\r\n\t\t\treturn {\r\n\t\t\t\t...state, \r\n\t\t\t\tusers: action.users\r\n\t\t\t}\r\n\r\n\t\tcase SET_CURRENT_PAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state, \r\n\t\t\t\tcurrentPage: action.currentPage\r\n\t\t\t}\r\n\r\n\t\tcase SET_TOTAL_USERS_COUNT:\r\n\t\t\treturn {\r\n\t\t\t\t...state, \r\n\t\t\t\ttotalFriendsCount: action.count\r\n\t\t\t}\r\n\r\n\t\tcase TOGGLE_IS_FETCHING:\r\n\t\t\treturn {\r\n\t\t\t\t...state, \r\n\t\t\t\tisFetching: action.isFetching\r\n\t\t\t}\r\n\r\n\t\tcase TOGGLE_IS_FOLLOWING_PROGRESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfollowingInProgress: action.isFetching \r\n\t\t\t\t? [...state.followingInProgress, action.userID]\r\n\t\t\t\t: [...state.followingInProgress.filter(id => id != action.userID)]\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default friendsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Preloader_userPhoto__c8T2G\",\"selectedPage\":\"Preloader_selectedPage__39pS-\",\"lds_dual_ring\":\"Preloader_lds_dual_ring__3x-db\",\"lds-dual-ring\":\"Preloader_lds-dual-ring__2uozZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2ek1n\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__lT6Sq\",\"fullname\":\"ProfileInfo_fullname__3fGsF\",\"status_content\":\"ProfileInfo_status_content__3B9T0\",\"userPhoto\":\"ProfileInfo_userPhoto__1jczd\",\"fullInfo\":\"ProfileInfo_fullInfo__1ad-e\",\"contactsList\":\"ProfileInfo_contactsList__hSv5h\",\"formSummaryError\":\"ProfileInfo_formSummaryError__UB0jX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1U6pH\",\"item\":\"Navbar_item__1q64F\",\"active\":\"Navbar_active__1fLOD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__tOpBX\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {\r\n\treturn <header className={s.header}>\r\n        <img src=\"https://a.storyblok.com/f/47007/410x200/d1811e7e9b/joom-200x100.png\" alt=\"\"/>\r\n     \t<div className={s.loginBlock}>\r\n     \t\t{props.isAuthed\r\n                ? <div> {props.login} \r\n                        <button onClick={props.logoutThunk}>Log out</button> \r\n                    </div> \r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n     \t\t\r\n     \t\t\r\n     \t</div>\r\n{/*        <div className={s.loginBlock}>\r\n            {props.isAuthed? <LogOut /> : null }\r\n        </div>*/}\r\n      </header>\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from '../API/api.js';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\n\r\nconst SET_USER_DATA = 'ADD-SET_USER_DATA';\r\nconst SET_CAPTCHA_URL_SUCCESS = 'SET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\n\r\nlet initialState = {\r\n\t\tuserId: null,\r\n      \temail: null,\r\n      \tlogin: null,\r\n      \tisAuthed: false, \r\n      \tcaptchaUrl: null // if null, then captcha is not required\r\n    }\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_DATA: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t\t// isAuthed: true\r\n\t\t\t}\r\n\r\n\t\tcase SET_CAPTCHA_URL_SUCCESS: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t\t// isAuthed: true\r\n\t\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuthed) => ( {type: SET_USER_DATA, payload: {userId, email, login, isAuthed}} );\r\n\r\nexport const setCaptchaUrl = (captchaUrl) => ( {type: SET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}} );\r\n\r\nexport const getAuthUserData = () => async (dispatch) => { //this is Thunk creator\r\n\tlet response = await authAPI.getMe(); \r\n\t\t\r\n\tif (response.data.resultCode === 0) {\r\n\t\tlet {id, login, email} = response.data.data;\r\n\t\t\tdispatch(setAuthUserData(id, email, login, true));\r\n\t\t}\r\n}\r\n\r\n\r\nexport const loginThunk = (email, password, rememberMe, captcha) => async (dispatch) => { //this is Thunk creator\r\n\t\r\n\r\n\tlet response = await authAPI.logIn(email, password, rememberMe, captcha);\r\n\t\r\n\tconsole.log(response.data);\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(getAuthUserData());\r\n\t}else { \r\n\t\tif (response.data.resultCode === 10) {\r\n\t\t\tdispatch(getCaptcha());\r\n\t\t}\r\n\t\tlet errorMessage = response.data.messages;\r\n\t\tdispatch(stopSubmit('login', {_error : errorMessage}));\r\n\t}\r\n}\r\n\r\nexport const getCaptcha = () => async (dispatch) => { //this is Thunk creator\r\n\tconst response = await securityAPI.getCaptchaUrl();\r\n\tconst captchaUrl = response.data.url;\r\n\tdispatch(setCaptchaUrl(captchaUrl));\r\n}\r\n\r\n\r\nexport const logoutThunk = () => async (dispatch) => { //this is Thunk creator\r\n\tlet response = await authAPI.logOut();\r\n\t\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(setAuthUserData(null, null, null, false));\r\n\t\tdispatch(setCaptchaUrl(null));\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header.jsx';\r\nimport * as axios from 'axios';\r\nimport {connect} from 'react-redux';\r\n// import {getAuthUserData} from './../../redux/auth-reducer.js';\r\nimport {logoutThunk} from './../../redux/auth-reducer.js';\r\n\r\n\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n\trender() {\r\n\t\treturn <Header {...this.props}/>\r\n\t}\r\n\t\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tisAuthed: state.auth.isAuthed,\r\n\tlogin: state.auth.login\r\n });\r\n\r\nexport default connect(mapStateToProps, {logoutThunk}) (HeaderContainer);","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst Navbar = () => {\r\n\treturn <nav className={classes.nav}>\r\n      <div >\r\n        <NavLink to=\"/profile\" className={classes.item} activeClassName={classes.active}>Profile</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/dialogs\" className={classes.item} activeClassName={classes.active}>Messages</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/feed\" className={classes.item} activeClassName={classes.active}>Feed</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/music\" className={classes.item} activeClassName={classes.active}>Music</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/settings\" className={classes.item} activeClassName={classes.active}>Settings</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/friends\" className={classes.item} activeClassName={classes.active}>Friends</NavLink>\r\n      </div>\r\n\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Post.module.css';\r\n \r\n\r\nconst Post = (props) => {\r\n\treturn (      \r\n    <div className={s.item}>\r\n      <img src=\"https://www.mcicon.com/wp-content/uploads/2021/01/People_User_1-copy-4.jpg\" alt=\"\" />\r\n      <div>\r\n        {props.message}\r\n      </div>\r\n\r\n      <div className={s.like}>\r\n        <a href=\"#\"> <span>Like {props.likesCount} </span> </a>\r\n      </div>\r\n\r\n    </div>  \r\n  )   \r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Posts/Post.jsx';\r\nimport { Field, reduxForm } from 'redux-form'; \r\nimport {required, maxLengthCreator} from './../../../utils/validators.js';\r\nimport {Textarea} from './../../common/FormsControls/FormsControls.js';\r\n   \r\n\r\nconst maxLength15 = maxLengthCreator(15);\r\n\r\nlet NewPostForm = (props) => {\r\n  return (\r\n      <form onSubmit={props.handleSubmit} className={s.form}>\r\n        <div>\r\n          <Field component={Textarea} name=\"WriteNewPost\" \r\n            validate={[required, maxLength15]}/>\r\n        </div>\r\n        <div>\r\n          <button>Add post</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\nconst NewPostFormRedux = reduxForm({ \r\n  form: 'newPost'\r\n})(NewPostForm);\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n  console.log('render MyPosts component');\r\n  console.log(props);\r\n  \r\n  let postsElements = props.posts.map(function(p) {\r\n    return <Post message={p.message} likesCount={p.likesCount} key={p.id}/>;\r\n  });\r\n\r\n  // let newPostElement = React.createRef();\r\n\r\n  // let onAddPost = (newPostTextForm) => {\r\n  //   props.addPost(newPostTextForm);\r\n  // }\r\n\r\n  // let onTextChange = () => {\r\n  //   let textChange = newPostElement.current.value;\r\n  //   props.updateNewPostText(textChange);\r\n  // }\r\n\r\n  const addNewPost = (formData) => {\r\n    props.addPost(formData.WriteNewPost);\r\n    // console.log(formData.WriteNewPost);\r\n    formData.WriteNewPost = '';\r\n\r\n  }\r\n\r\n\r\n\treturn <div className={s.postsBlock}>\r\n        <h3>My posts</h3>\r\n\r\n{/*        <div className={s.form}>\r\n          <div>\r\n            <textarea ref={newPostElement} value={props.profilePage.newPostText} onChange={onTextChange}/>\r\n          </div>\r\n          <div><button onClick= {onAddPost} >Add post</button></div>  \r\n        </div>*/}\r\n\r\n        <NewPostFormRedux onSubmit={addNewPost}/>\r\n\r\n        <div className={s.posts}>\r\n\r\n          {postsElements.reverse()}\r\n          \r\n         </div>\r\n      </div>\r\n  }\r\n\r\nexport default MyPosts;","import {friendsAPI, profileAPI} from '../API/api.js'\r\nimport {stopSubmit} from 'redux-form';\r\n\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\n// const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n\t\tposts : [\r\n\t\t\t  {id: 1, message: 'Hello, how are you?', likesCount: 10},\r\n\t\t\t  {id: 2, message: \"It's my first post\", likesCount: 2},\r\n\t\t\t  {id: 3, message: \"I'm trying React\", likesCount: 23},\r\n\t\t\t  {id: 4, message: \"I know something\", likesCount: 12},\r\n\t\t\t  {id: 5, message: \"Let's practice in React!\", likesCount: 55}\r\n\t\t],\r\n\t\tprofile: null,\r\n\t\tstatus: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST: \r\n\t\t\tlet newPost = {\r\n\t\t\t\tid : 6,\r\n\t\t\t\tmessage : action.newPostTextForm,\r\n\t\t\t\tlikesCount : 0};\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [...state.posts, newPost],\r\n\t\t\t\t// newPostText: \"\"\r\n\t\t\t}\r\n\r\n\t\t// case UPDATE_NEW_POST_TEXT:\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\tnewPostText: action.newText\r\n\t\t// \t}\r\n\r\n\t\tcase SET_USER_PROFILE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: action.profile\r\n\t\t\t}\r\n\r\n\t\tcase SET_USER_STATUS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\r\n\t\tcase SAVE_PHOTO_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: {...state.profile, photos: action.photos } //here may be a problem!!!\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const addPostActionCreator = (newPostTextForm) => ( {type: ADD_POST, newPostTextForm} );\r\n\r\n// export const updateNewPostTextActionCreator = (textChange) => \r\n// \t( { type: UPDATE_NEW_POST_TEXT,\r\n//     \tnewText: textChange } );\r\n\r\nexport const setUserProfile = (profile) => ( {type: SET_USER_PROFILE, profile} );\r\n\r\nexport const savePhotoSuccess = (photos) => ( {type: SAVE_PHOTO_SUCCESS, photos} );\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n\tlet response = await friendsAPI.getProfile(userId);\r\n\tdispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const setUserStatus = (status) => ( {type: SET_USER_STATUS, status} );\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n\tlet response = await profileAPI.getStatus(userId);\r\n\tdispatch(setUserStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => { //this is a Thunk\r\n\tlet response = await profileAPI.updateStatus(status)\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(setUserStatus(status));\r\n\t}\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n\tlet response = await profileAPI.savePhoto(file)\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(savePhotoSuccess(response.data.data.photos));\r\n\t}\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n\tconst userId = getState().auth.userId;\r\n\tlet response = await profileAPI.saveProfile(profile)\r\n\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(getUserProfile(userId));\r\n\t} else {\r\n\t\tlet errorMessage = response.data.messages[0];\r\n\t\tdispatch(stopSubmit('editProfile', {_error : errorMessage}));\r\n\t\treturn Promise.reject(response.data.messages[0]);\r\n\t}\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\n\r\nimport MyPosts from './MyPosts.jsx';\r\nimport {addPostActionCreator } from './../../../redux/profile-reducer.js';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\n// const MyPostsContainer = (props) => {\r\n\r\n// let state = props.store.getState();\r\n\r\n\r\n// let addPostUI = () => {\r\n//   props.store.dispatch(addPostActionCreator());\r\n// }\r\n\r\n// let onPostChange = (textChange) => {\r\n//   let action = updateNewPostTextActionCreator(textChange);\r\n//   props.store.dispatch (action);\r\n// }\r\n\r\n\r\n// \treturn  <MyPosts updateNewPostText={onPostChange}\r\n//           addPost={addPostUI} profilePage={state.profilePage}/>\r\n\r\n// }\r\n\r\nfunction mapStateToProps (state) {\r\n\t// console.log('MyPosts mapStateToProps');\r\n\treturn {\r\n\t\tposts: state.profilePage.posts\r\n\t}\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n\r\n\treturn {\r\n\t\taddPost: (newPostText) => {\r\n\t\t\tdispatch(addPostActionCreator(newPostText))\r\n\t\t},\r\n\t\t// updateNewPostText: (textChange) => {\r\n\t\t// \tdispatch(updateNewPostTextActionCreator(textChange))\r\n\t\t// }\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nexport const Contacts = ({contactTitle, contactValue}) => {\r\n  return <div><b>{contactTitle}</b> : {contactValue}</div>\r\n}\r\n\r\n\r\nconst ProfileData = ({profile, onEditProfile, isOwner}) => {\r\n  return <div className={s.fullInfo}>\r\n            <div>\r\n              <b>Full name: </b> {profile.fullName}\r\n            </div>\r\n            <div>\r\n              <b>Looking for a job: </b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            { profile.lookingForAJob &&\r\n              <div>\r\n                <b>My professional skills: </b> {profile.lookingForAJobDescription}\r\n              </div>\r\n            }\r\n            <div>\r\n              <b>About me: </b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n              <b>Contacts :</b>\r\n                  <div className={s.contactsList}>\r\n                  {Object.keys(profile.contacts).map( item => {\r\n                      return <Contacts key={item} contactTitle={item} \r\n                     contactValue={profile.contacts[item]}/> })\r\n                  }\r\n                  </div>\r\n            </div>\r\n            { isOwner && <button onClick={onEditProfile}>Edit profile</button>}\r\n            \r\n          </div>\r\n}\r\n \r\nexport default ProfileData;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {Contacts} from './ProfileData.jsx';\r\nimport { Field, reduxForm } from 'redux-form'; \r\n\r\n\r\n\r\nconst ProfileDataEditForm = ({handleSubmit, profile, error}) => {\r\n  return <form className={s.fullInfo} onSubmit={handleSubmit}>\r\n            <div>\r\n              <b>Full name: </b> \r\n              <div>\r\n                      <Field component=\"input\" \r\n                            name=\"fullName\" type=\"text\"\r\n                            placeholder=\"Full name\"/>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <b>Looking for a job: </b>  \r\n                  <label>\r\n                      <Field name=\"lookingForAJob\" component=\"input\" type=\"radio\" value=\"true\" />{' '}\r\n                      Yes\r\n                  </label>\r\n                  <label>\r\n                    <Field name=\"lookingForAJob\" component=\"input\" type=\"radio\" value=\"false\" />{' '}\r\n                    No\r\n                  </label>\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills: </b> \r\n                <div>\r\n                    <Field component=\"input\" \r\n                          name=\"lookingForAJobDescription\" type=\"text\"\r\n                          placeholder=\"My skills\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n              <b>About me: </b> \r\n                <div>\r\n                  <Field component=\"textarea\" \r\n                        name=\"aboutMe\" type=\"text\"\r\n                        placeholder=\"About me\"/>\r\n                </div>\r\n                                  \r\n            </div>\r\n            <div>\r\n              <b>Contacts :</b>\r\n                  <div className={s.contactsList}>\r\n                  {Object.keys(profile.contacts).map( item => {\r\n                      return <div className={s.contact} key={item}>\r\n                          <b>{item} :</b>\r\n                          <Field component=\"input\" \r\n                              name={'contacts.' + item} type=\"text\"\r\n                              placeholder={item}/>\r\n                      </div>\r\n                    })\r\n                  }\r\n                  </div>\r\n            </div>\r\n            <button>Save changes</button>\r\n               \r\n                  { \r\n                      error && <div className={s.formSummaryError}>\r\n                          {error}\r\n                      </div>\r\n                  }\r\n          \r\n\r\n          </form>\r\n}\r\n\r\nconst ProfileDataEditWithReduxForm = reduxForm({ \r\n  form: 'editProfile'\r\n})(ProfileDataEditForm);\r\n\r\nexport default ProfileDataEditWithReduxForm;","import React, {useState, useEffect} from 'react';\r\nimport s from '../ProfileInfo/ProfileInfo.module.css';\r\n// import Preloader from './../../Friends/Preloader/Preloader.jsx'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [locStatus, setLocStatus] = useState(props.status);\r\n\r\n    useEffect ( () => {\r\n        setLocStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false); \r\n        props.updateStatus(locStatus) \r\n    }\r\n    const onStatusChange = (e) => {\r\n        setLocStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n    <div>\r\n                \r\n               <div>\r\n                 <span className={s.fullname}>{props.profile.fullName}</span>\r\n               </div>\r\n              \r\n              { !editMode && \r\n                <div>\r\n                  <span className={s.status_content} onDoubleClick={activateEditMode}>\r\n                      {props.status}\r\n                  </span>\r\n                </div>\r\n              } \r\n            {editMode &&\r\n              <div>\r\n                <input autoFocus={true} onBlur={deActivateEditMode} onChange={onStatusChange}\r\n                value={locStatus}/>\r\n              </div>\r\n            }\r\n    </div>\r\n    )\r\n  }\r\n\r\nexport default ProfileStatusWithHooks;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from './../../Friends/Preloader/Preloader.jsx';\r\nimport ProfileData from './ProfileData.jsx';\r\nimport ProfileDataEditWithReduxForm from './ProfileDataEditForm.jsx';\r\nimport ProfileStatusWihtHooks from '../ProfileStatus/ProfileStatusWithHooks.js';\r\nimport userPhoto from './../../../assets/images/user-young-boy.jpg';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n\r\n\tif (!profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]) \r\n      console.log(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onEditProfile = () => {\r\n    setEditMode(true)\r\n  }\r\n  const onSumbitEditedProfile = (formData) => {\r\n    saveProfile(formData).then(\r\n      ()=> {\r\n          setEditMode(false)\r\n      })\r\n  }\r\n\r\n\treturn <div>\r\n          <div className={s.descriptionBlock}>\r\n            <img src={profile.photos.large || userPhoto} alt=\"\" className={s.userPhoto}/>\r\n          </div>\r\n          <div>\r\n            { isOwner && \r\n              <input type=\"file\" name=\"\" id=\"\" onChange={onMainPhotoSelected}/> \r\n            }    \r\n          </div>\r\n          <ProfileStatusWihtHooks profile={profile} status={status}\r\n                  updateStatus={updateStatus}/>\r\n\r\n          { editMode ? <ProfileDataEditWithReduxForm profile={profile} \r\n          onSubmit={onSumbitEditedProfile} initialValues={profile}/> \r\n          : <ProfileData profile={profile} isOwner={isOwner} \r\n          onEditProfile={onEditProfile}/> }\r\n    \r\n{/*          { isOwner && editMode ?\r\n              <button name=\"\" id=\"\" onClick={onSubmitEditedProfile}>Save changes</button> \r\n              : <button name=\"\" id=\"\" onClick={onEditProfile}>Edit profile</button>\r\n            } */}\r\n    </div>\r\n} \r\n\r\n\r\nexport default ProfileInfo; \r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer.jsx';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n\treturn <div>\r\n\t  <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}\r\n\t  isOwner={props.isOwner} savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n\r\n      <MyPostsContainer />\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Profile; ","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Profile from './Profile.jsx';\r\nimport * as axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from './../../redux/profile-reducer.js';\r\nimport {friendsAPI} from '../../API/api.js';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {withAuthRedirect} from './../../HOC/withAuthRedirect.js';\r\nimport {compose} from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\trefreshProfile() {\r\n\t\tlet userId = this.props.match.params.userId; \r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push('login') // Старатися не використовувати\r\n\t\t\t\t//цей метод, оскільки він втручається в ЖЦ компоненти\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\tthis.props.getStatus(userId);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshProfile();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif(this.props.match.params.userId != prevProps.match.params.userId) {\r\n\t\t\tthis.refreshProfile();\r\n\t\t}\r\n\t}\r\n \r\n\trender() {  \r\n\t\treturn <Profile {...this.props} profile={this.props.profile}\r\n\t\t\t\tstatus={this.props.status} updateStatus={this.props.updateStatus}\r\n\t\t\t\tisOwner={!this.props.match.params.userId} savePhoto={this.props.savePhoto}/>\r\n\t}\r\n}\r\n\r\n// compose(\r\n// \tconnect(mapStateToProps, {getUserProfile})\r\n// \twithRouter,\r\n// \twithAuthRedirect\r\n// )(ProfileContainer)\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer); // H O C used\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status, \r\n\tauthorizedUserId: state.auth.userId,\r\n\tisAuthed: state.auth.isAuthed\r\n})\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n\twithRouter,\r\n\twithAuthRedirect\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './Feed.module.css'\r\n\r\n// variable with some HTML code\r\nlet someText = [<div>\r\n\t\t<h2>Hello, this is text <strong>inside</strong> <i>variable</i></h2>\r\n\t<button><strong>Just</strong> click</button>\r\n\t\t<ul>Task list\r\n\t\t\t<li>HTML</li>\r\n\t\t\t<li>CSS</li>\r\n\t\t\t<li>JS</li>\r\n\t\t\t<li>REACT</li>\r\n\t\t</ul>\r\n\t</div>, <h1>It works!!!</h1>\r\n]\r\n\r\nclass Feed extends React.Component {\r\n\r\n\tstate = {\r\n\t    time: new Date().toLocaleTimeString()\r\n  \t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('component Feed DidMount');\r\n\r\n\r\n\t\tthis.testVar = setInterval(\r\n\t\t()=> this.setState(\r\n\t\t\t{time: new Date().toLocaleTimeString()}\r\n\t\t), 1000);\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tconsole.log('did update')\r\n\t\tconsole.log(this.state)\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log('good by Feed');\r\n\t\tclearInterval(this.testVar);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Feed</h1>\r\n\r\n\t      <h1>Привет, мир!</h1>\r\n\t      <div className={s.timeBlock}>\r\n\t      \t<h2>Зараз <span className={s.clock}>{ this.state.time } </span></h2>\r\n\t      </div>\r\n\t      {someText}\r\n\t\t</div>\r\n\t\t) \t\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Feed;","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\nconst Music = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tMusic\r\n\t\t</div>\r\n\t) \t\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form'; \r\nimport {Input} from './../common/FormsControls/FormsControls.js';\r\nimport {required, maxLengthCreator} from './../../utils/validators.js';\r\nimport {loginThunk} from './../../redux/auth-reducer.js';\r\nimport {Redirect} from 'react-router-dom';\r\nimport style from './../common/FormsControls/FormsControls.module.css';\r\n\r\n\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n\r\n\treturn (\r\n\t\t\t<form onSubmit={handleSubmit} className={style.form}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Field component={Input} type=\"text\" name=\"email\" \r\n\t\t\t\t\tplaceholder='Email' validate={[required]}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Field component={Input} name=\"password\" type=\"password\" \r\n\t\t\t\t\tplaceholder='password' validate={[required, maxLength20]} />\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Field component={'input'} id=\"rememberMe\" name=\"rememberMe\" type=\"checkbox\"/>\r\n\t\t\t\t\t\t<label htmlFor=\"rememberMe\"> Remember me </label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{\r\n\t\t\t\t\tcaptchaUrl && \r\n\t\t\t\t\t<div className={style.captchaBlock}>\r\n\t\t\t\t\t\t<img className={style.captchaImg} src={captchaUrl} alt=\"\"/>\r\n\t\t\t\t\t\t<Field component={Input} type=\"text\" placeholder=\"enter captcha symbols\" \r\n\t\t\t\t\t\tname=\"captcha\" validate={[required]}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type='submit'>Login</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{ \r\n\t\t\t\t\terror && <div className={style.formSummaryError}>\r\n\t\t\t\t\t\t\t{error}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</form>\r\n\t\t)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ \r\n\tform: 'login'\r\n})(LoginForm)\r\n\r\n// evaluate it for ContactForm component\r\n\r\nconst Login = (props) => {\r\n\tconst onSubmit = (formData) => {\r\n\t\tprops.loginThunk(formData.email, formData.password, \r\n\t\t\t\t\t\tformData.rememberMe, formData.captcha);\r\n\t\tconsole.log(formData)\r\n\t}\r\n\tif (props.isAuthed) {\r\n\t\treturn <Redirect to={`/profile`} />\r\n\t}else {\r\n\t\treturn <div>\r\n\t\t\t<h1>LOGIN</h1>\r\n\t\t\t<LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n\t\t</div>\r\n\t}\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuthed : state.auth.isAuthed,\r\n\tcaptchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginThunk})(Login);","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\nconst Settings = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tSettings\r\n\t\t</div>\r\n\t) \t\r\n}\r\n\r\nexport default Settings;","import {authAPI} from '../API/api.js';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {getAuthUserData} from './auth-reducer.js';\r\n\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n\t\tinitialized: false,\r\n    }\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n\t\tcase INITIALIZED_SUCCESS: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinitialized: true\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const initializedSuccess = () => ( {type: INITIALIZED_SUCCESS} );\r\n\r\nexport const initializeApp = () => (dispatch) => { //this is Thunk creator\r\n\tlet promise = dispatch(getAuthUserData());\r\n\tPromise.all([promise])\r\n\t\t.then(() => {\r\n\t\t\tdispatch(initializedSuccess())\r\n\t\t});\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default appReducer;","import React, {Suspense} from 'react';\r\nimport {BrowserRouter, Route, withRouter, Switch, Redirect} from 'react-router-dom';\r\nimport './App.css';\r\nimport HeaderContainer from './Components/Header/HeaderContainer.jsx';\r\nimport Navbar from './Components/Navbar/Navbar.jsx';\r\nimport ProfileContainer from './Components/Profile/ProfileContainer.jsx';\r\n// import DialogsContainer from './Components/Dialogs/DialogsContainer.jsx';\r\nimport Feed from './Components/Feed/Feed.jsx';\r\nimport Music from './Components/Music/Music.jsx';\r\nimport Login from './Components/Login/Login.jsx';\r\nimport Settings from './Components/Settings/Settings.jsx';\r\n// import FriendsContainer from './Components/Friends/FriendsContainer.jsx';\r\nimport Preloader from './Components/Friends/Preloader/Preloader.jsx';\r\n// import Preloader from './redux/auth-reducer.js';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {initializeApp} from './redux/app-reducer.js'\r\n\r\nconst FriendsContainer = React.lazy(()=> import('./Components/Friends/FriendsContainer.jsx'));\r\nconst DialogsContainer = React.lazy(()=> import('./Components/Dialogs/DialogsContainer.jsx'));\r\n// const ProfileContainer = React.lazy(()=> import('./Components/Profile/ProfileContainer.jsx'));\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  catchAllUnhandledErrors = () => {\r\n    alert('some errors occured');\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n    window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log('App did update')\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n   return (\r\n\r\n      <div className=\"app-wrapper\">\r\n      <Suspense fallback={Preloader}>\r\n        <HeaderContainer />\r\n\r\n        <Navbar />\r\n        \r\n        <div className=\"app-wrapper-content\">\r\n\r\n        <Switch>\r\n          <Route exact path='/' render={ () =>\r\n              <Redirect to={'profile'}  />} \r\n          /> \r\n          <Route path='/profile/:userId?' render={ () => \r\n              <ProfileContainer /> }\r\n          /> \r\n\r\n          <Route path='/dialogs' render={ () =>\r\n              <DialogsContainer  />} \r\n          />\r\n          <Route path='/friends' render={ () =>\r\n              <FriendsContainer />} />\r\n\r\n          <Route path='/feed' component={Feed} />\r\n          <Route path='/music' component={Music} />\r\n          <Route path='/settings' component={Settings} />\r\n       \r\n          <Route path='/login/test-page' render={ () =>\r\n              <div>Test login page</div>\r\n            } />\r\n          <Route  path='/login' render={ () =>\r\n              <Login />} />\r\n\r\n          <Route  path='*' render={ () =>\r\n              <div>404 page doesn't exist</div>} />\r\n        </Switch>\r\n        </div>\r\n      </Suspense>\r\n      </div>\r\n   );\r\n }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {initializeApp})) (App);\r\n","let initialState = {\r\n\tsidebar : {}\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\t\r\n\t\r\n\treturn state;\r\n}\r\n\r\nexport default sidebarReducer;","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport profileReducer from './profile-reducer.js';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer.js';\r\nimport friendsReducer from './friends-reducer.js';\r\nimport authReducer from './auth-reducer.js';\r\nimport appReducer from './app-reducer.js';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\n\r\nlet reducers = combineReducers({\r\n\tprofilePage: profileReducer,\r\n\tdialogsPage: dialogsReducer,\r\n\tsidebar: sidebarReducer,\r\n\tfriendsPage: friendsReducer,\r\n\tauth: authReducer,\r\n\tform: formReducer,\r\n\tapp: appReducer\r\n});\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n ));\r\n\r\nwindow.store = store;\r\n// window.this = this;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './App';\nimport store from './redux/redux-store';\nimport {Provider} from 'react-redux';\n \n\nlet reRenderEntireTree = (state) => {\n\tReactDOM.render(\n\t  <BrowserRouter>\n\t  \t<Provider store={store}>\n\t    \t<App />\n\t    </Provider>\n\t  </BrowserRouter>,\n\t  document.getElementById('root')\n\t);\n}\n\nreRenderEntireTree (store.getState());\n\nstore.subscribe (()=> {\n\tlet state = store.getState();\n\treRenderEntireTree(state);\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// state={state} dispatch={store.dispatch.bind(store)} \n\n// state={state} dispatch={store.dispatch.bind(store)}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormsControls_form__1xDbE\",\"formControl\":\"FormsControls_formControl__m70zB\",\"error\":\"FormsControls_error__WNGRJ\",\"formSummaryError\":\"FormsControls_formSummaryError__3hsYH\"};","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nexport const required = (value) => {\r\n\tif (value) return undefined; \r\n\treturn 'The field is required';  \r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\tif (value && value.length > maxLength) return `Max length is ${maxLength} symbols`; \r\n\treturn undefined;  \r\n}\r\n\r\nexport const maxLength = (value) => {\r\n\tif (value && value.length > 30) return \"Max length is 30 symbols\"; \r\n\treturn undefined;  \r\n}\r\n\r\nexport default required;","import React from 'react';\r\nimport styles from './FormsControls.module.css'\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n\tlet hasError = meta.touched && meta.error \r\n\treturn (\r\n\t\t<div className={ styles.formControl + ' ' + (hasError ? styles.error : '') }>\r\n\t\t\t<div>\r\n\t\t\t\t<textarea {...input} {...props}/>\r\n\t\t\t</div>\r\n\t\t\t{hasError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n\tlet hasError = meta.touched && meta.error \r\n\treturn (\r\n\t\t<div className={ styles.formControl + ' ' + (hasError ? styles.error : '') }>\r\n\t\t\t<div>\r\n\t\t\t\t<input {...input} {...props}/>\r\n\t\t\t</div>\r\n\t\t\t{hasError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport styles from './Preloader.module.css'; \r\n\r\n\r\n\r\nconst Preloader = (props) => {\r\n\r\n\r\n\t\t\r\n\treturn  <div className={styles.lds_dual_ring}></div>\r\n\t\t\r\n}\r\n  \t\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__26BOD\",\"posts\":\"MyPosts_posts__WVjTz\",\"form\":\"MyPosts_form__21L26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3-E6Z\",\"loginBlock\":\"Header_loginBlock__32psG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ND1Bb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeBlock\":\"Feed_timeBlock__1vFVd\",\"clock\":\"Feed_clock__1ZjR_\"};"],"sourceRoot":""}